{"ast":null,"code":"import _regeneratorRuntime from \"/home/yamakasi/React/react_chat_socketio/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/yamakasi/React/react_chat_socketio/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"/home/yamakasi/React/react_chat_socketio/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _taggedTemplateLiteral from \"/home/yamakasi/React/react_chat_socketio/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/home/yamakasi/React/react_chat_socketio/src/components/tabs/ChatTab.jsx\";\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"  \\n  & .number {\\n    margin-left: 8px;\\n    padding: 2px 8px;\\n    font-weight: bold;\\n    border-radius: 50%;\\n    // background: radial-gradient(circle at 2px 2px, #5cabff, #000);\\n    background: #c21500;  /* fallback for old browsers */\\nbackground: -webkit-radial-gradient(circle at 2px 2px, #EDDE5D, #F09819);  /* Chrome 10-25, Safari 5.1-6 */\\nbackground: radial-gradient(circle at 2px 2px, #EDDE5D, #F09819); /* W3C, IE 10+/ Edge, Firefox 16+, Chrome 26+, Opera 12+, Safari 7+ */\\n\\n    color: black;\\n    box-shadow: 2px 2px 4px rgba(0,0,0, .3);\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { useEffect, useState } from \"react\";\nimport styled from 'styled-components';\nimport { useAppHooks } from \"../../contexts\";\nimport api from \"../../api\";\nimport { socketOn } from \"../../socket\";\nvar ChatsTabStyle = styled.div(_templateObject());\n\nvar ChatsTab = function ChatsTab() {\n  var _useAppHooks = useAppHooks(),\n      useAuth = _useAppHooks.useAuth,\n      socket = _useAppHooks.socket;\n\n  var _useAuth = _slicedToArray(useAuth, 2),\n      user = _useAuth[0].user,\n      dispatchAuth = _useAuth[1];\n\n  var _useState = useState(0),\n      _useState2 = _slicedToArray(_useState, 2),\n      nbUnread = _useState2[0],\n      setUnread = _useState2[1];\n\n  socketOn('count-unread-chat', socket, user, function (data, user) {\n    if (data && data.chat.unreads.length > 0 && data.users.find(function (u) {\n      return u.id === user.id;\n    })) {\n      setUnread(function (prevUnread) {\n        return prevUnread + 1;\n      });\n    } else {\n      setUnread(function (prevUnread) {\n        return prevUnread === 1 ? 0 : prevUnread - 1;\n      });\n    }\n  });\n  useEffect(function () {\n    var fetchChat =\n    /*#__PURE__*/\n    function () {\n      var _ref = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee() {\n        var res, unreadChats;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.prev = 0;\n                _context.next = 3;\n                return api.user.getChatList(user.id);\n\n              case 3:\n                res = _context.sent;\n\n                if (res.data.chats.length > 0) {\n                  unreadChats = res.data.chats.filter(function (c) {\n                    return c.unreads.length > 0;\n                  });\n                  console.log(unreadChats);\n\n                  if (unreadChats.length > 0 && unreadChats.map(function (chat) {\n                    return chat.unreads.find(function (unread) {\n                      return unread.authorId !== user.id;\n                    });\n                  })) {\n                    setUnread(unreadChats.length);\n                  }\n                }\n\n                _context.next = 10;\n                break;\n\n              case 7:\n                _context.prev = 7;\n                _context.t0 = _context[\"catch\"](0);\n                console.log(_context.t0); // alert(error.response.data.msg)\n\n              case 10:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, null, [[0, 7]]);\n      }));\n\n      return function fetchChat() {\n        return _ref.apply(this, arguments);\n      };\n    }();\n\n    fetchChat();\n  }, []);\n  return React.createElement(ChatsTabStyle, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    className: \"label\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, \"Chats\"), nbUnread > 0 && React.createElement(\"span\", {\n    className: \"number\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, nbUnread));\n};\n\nexport default ChatsTab;","map":{"version":3,"sources":["/home/yamakasi/React/react_chat_socketio/src/components/tabs/ChatTab.jsx"],"names":["React","useEffect","useState","styled","useAppHooks","api","socketOn","ChatsTabStyle","div","ChatsTab","useAuth","socket","user","dispatchAuth","nbUnread","setUnread","data","chat","unreads","length","users","find","u","id","prevUnread","fetchChat","getChatList","res","chats","unreadChats","filter","c","console","log","map","unread","authorId"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport styled from 'styled-components'\r\nimport { useAppHooks } from \"../../contexts\";\r\nimport api from \"../../api\";\r\nimport { socketOn } from \"../../socket\";\r\n\r\nconst ChatsTabStyle = styled.div`  \r\n  & .number {\r\n    margin-left: 8px;\r\n    padding: 2px 8px;\r\n    font-weight: bold;\r\n    border-radius: 50%;\r\n    // background: radial-gradient(circle at 2px 2px, #5cabff, #000);\r\n    background: #c21500;  /* fallback for old browsers */\r\nbackground: -webkit-radial-gradient(circle at 2px 2px, #EDDE5D, #F09819);  /* Chrome 10-25, Safari 5.1-6 */\r\nbackground: radial-gradient(circle at 2px 2px, #EDDE5D, #F09819); /* W3C, IE 10+/ Edge, Firefox 16+, Chrome 26+, Opera 12+, Safari 7+ */\r\n\r\n    color: black;\r\n    box-shadow: 2px 2px 4px rgba(0,0,0, .3);\r\n  }\r\n`\r\n\r\nconst ChatsTab = () => {\r\n  const { useAuth, socket } = useAppHooks()\r\n  const [{user}, dispatchAuth] = useAuth\r\n\r\n  const [nbUnread, setUnread] = useState(0)\r\n\r\n  socketOn('count-unread-chat', socket, user, (data, user) => {\r\n    if (data && data.chat.unreads.length > 0 && data.users.find(u => u.id === user.id)) {\r\n      setUnread(prevUnread => prevUnread + 1)\r\n    }\r\n    else {\r\n      setUnread(prevUnread => prevUnread === 1 ? 0 : prevUnread - 1)\r\n    }\r\n  })\r\n\r\n  useEffect(() => {\r\n    const fetchChat = async () => {\r\n      try {\r\n        const res = await api.user.getChatList(user.id)\r\n        if (res.data.chats.length > 0) {\r\n          let unreadChats = res.data.chats.filter(c => c.unreads.length > 0)\r\n          console.log(unreadChats)\r\n          if (unreadChats.length > 0 && unreadChats.map(chat => chat.unreads.find(unread => unread.authorId !== user.id))){\r\n            setUnread(unreadChats.length)\r\n          }\r\n        }\r\n      } catch (error) {\r\n        console.log(error)\r\n        // alert(error.response.data.msg)\r\n      }\r\n    }\r\n\r\n    fetchChat()\r\n  }, [])\r\n\r\n  return (\r\n    <ChatsTabStyle>\r\n      <span className='label'>Chats</span>\r\n      {nbUnread > 0 && <span className='number'>{nbUnread}</span>}\r\n    </ChatsTabStyle>\r\n  );\r\n};\r\n\r\nexport default ChatsTab;\r\n"]},"metadata":{},"sourceType":"module"}
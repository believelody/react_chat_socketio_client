{"ast":null,"code":"import _slicedToArray from \"/home/yamakasi/React/react_chat_socketio/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _taggedTemplateLiteral from \"/home/yamakasi/React/react_chat_socketio/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/home/yamakasi/React/react_chat_socketio/src/components/chats/Chat.jsx\";\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  width: auto;\\n  position: relative;\\n  overflow: hidden;\\n  max-height: 100vh;\\n  overflow: hidden;\\n\\n  @media \", \" {\\n    width: 100vw;\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport MessageForm from \"../forms/MessageForm\";\nimport MessageList from \"../messages/MessageList\";\nimport ChatHeader from \"../header/ChatHeader\";\nimport Dropdown from \"../dropdown/Dropdown\";\nimport DropdownItem from \"../dropdown/DropdownItem\";\nimport { useAppHooks } from \"../../contexts\";\nimport devices from \"../../utils/devices\";\nimport api from \"../../api\";\nvar ChatStyle = styled.div(_templateObject(), devices.mobileL);\n\nvar Chat = function Chat(_ref) {\n  var location = _ref.location,\n      match = _ref.match;\n\n  var _useAppHooks = useAppHooks(),\n      useTransition = _useAppHooks.useTransition,\n      socket = _useAppHooks.socket;\n\n  var _useTransition = _slicedToArray(useTransition, 2),\n      chatSelected = _useTransition[0].chatSelected,\n      _ = _useTransition[1];\n\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      chat = _useState2[0],\n      setChat = _useState2[1];\n\n  var _useState3 = useState(0),\n      _useState4 = _slicedToArray(_useState3, 2),\n      y = _useState4[0],\n      setY = _useState4[1];\n\n  var _useState5 = useState(false),\n      _useState6 = _slicedToArray(_useState5, 2),\n      isDisplayed = _useState6[0],\n      setDisplay = _useState6[1];\n\n  var _useState7 = useState(true),\n      _useState8 = _slicedToArray(_useState7, 2),\n      loading = _useState8[0],\n      setLoading = _useState8[1];\n\n  var getHeaderPosition = function getHeaderPosition(isDisplayed, y) {\n    setDisplay(isDisplayed);\n    setY(y);\n  };\n\n  useEffect(function () {// if (!chat && !chatSelected) {\n    //   socket.on(\"fetch-chat\", chatFetched => {\n    //     setChat(chatFetched);\n    //   });\n    // }\n    // const chat = await api.chat.getChat()\n  }, [chat, chatSelected, socket]);\n  console.log(location);\n  console.log(match);\n  return React.createElement(ChatStyle, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, loading && React.createElement(\"h3\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, \"Loading...\"), !loading && chat && React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, React.createElement(ChatHeader, {\n    getHeaderPosition: getHeaderPosition,\n    isDisplayed: isDisplayed,\n    chat: chat,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }), React.createElement(Dropdown, {\n    propsY: y,\n    isDisplayed: isDisplayed,\n    handleDropdown: setDisplay,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, React.createElement(DropdownItem, {\n    handleClick: function handleClick() {\n      return setDisplay(false);\n    },\n    text: \"Add User to Chat\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  })), React.createElement(MessageList, {\n    messages: chat.messages,\n    users: chat.users,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }), React.createElement(MessageForm, {\n    chatId: chat.id,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  })));\n};\n\nexport default Chat;","map":{"version":3,"sources":["/home/yamakasi/React/react_chat_socketio/src/components/chats/Chat.jsx"],"names":["React","useState","useEffect","styled","MessageForm","MessageList","ChatHeader","Dropdown","DropdownItem","useAppHooks","devices","api","ChatStyle","div","mobileL","Chat","location","match","useTransition","socket","chatSelected","_","chat","setChat","y","setY","isDisplayed","setDisplay","loading","setLoading","getHeaderPosition","console","log","messages","users","id"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport MessageForm from \"../forms/MessageForm\";\r\nimport MessageList from \"../messages/MessageList\";\r\nimport ChatHeader from \"../header/ChatHeader\";\r\nimport Dropdown from \"../dropdown/Dropdown\";\r\nimport DropdownItem from \"../dropdown/DropdownItem\";\r\nimport { useAppHooks } from \"../../contexts\";\r\nimport devices from \"../../utils/devices\";\r\nimport api from \"../../api\";\r\n\r\nconst ChatStyle = styled.div`\r\n  width: auto;\r\n  position: relative;\r\n  overflow: hidden;\r\n  max-height: 100vh;\r\n  overflow: hidden;\r\n\r\n  @media ${devices.mobileL} {\r\n    width: 100vw;\r\n  }\r\n`;\r\n\r\nconst Chat = ({ location, match }) => {\r\n  const { useTransition, socket } = useAppHooks();\r\n\r\n  const [{ chatSelected }, _] = useTransition;\r\n\r\n  const [chat, setChat] = useState(null);\r\n  const [y, setY] = useState(0);\r\n  const [isDisplayed, setDisplay] = useState(false);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  const getHeaderPosition = (isDisplayed, y) => {\r\n    setDisplay(isDisplayed);\r\n    setY(y);\r\n  };\r\n\r\n  useEffect(() => {\r\n    // if (!chat && !chatSelected) {\r\n    //   socket.on(\"fetch-chat\", chatFetched => {\r\n    //     setChat(chatFetched);\r\n    //   });\r\n    // }\r\n    // const chat = await api.chat.getChat()\r\n  }, [chat, chatSelected, socket]);\r\n\r\n  console.log(location)\r\n  console.log(match)\r\n \r\n  return (\r\n    <ChatStyle>\r\n      {\r\n        loading && <h3>Loading...</h3>\r\n      }\r\n      {!loading && chat && (\r\n        <div>\r\n          <ChatHeader\r\n            getHeaderPosition={getHeaderPosition}\r\n            isDisplayed={isDisplayed}\r\n            chat={chat}\r\n          />\r\n          <Dropdown\r\n            propsY={y}\r\n            isDisplayed={isDisplayed}\r\n            handleDropdown={setDisplay}\r\n          >\r\n            <DropdownItem\r\n              handleClick={() => setDisplay(false)}\r\n              text=\"Add User to Chat\"\r\n            />\r\n          </Dropdown>\r\n          <MessageList messages={chat.messages} users={chat.users} />\r\n          <MessageForm chatId={chat.id} />\r\n        </div>\r\n      )}\r\n    </ChatStyle>\r\n  );\r\n};\r\n\r\nexport default Chat;\r\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import axios from \"axios\";\nimport { baseUrl } from \"./\";\nvar defaultPath = \"users\";\nexport default {\n  getUsers: function getUsers() {\n    return axios.get(\"\".concat(baseUrl, \"/\").concat(defaultPath));\n  },\n  getUser: function getUser(id) {\n    return axios.get(\"\".concat(baseUrl, \"/\").concat(defaultPath, \"/\").concat(id));\n  },\n  login: function login(email, password) {\n    return axios.post(\"\".concat(baseUrl, \"/\").concat(defaultPath, \"/login\"), {\n      email: email,\n      password: password\n    });\n  },\n  register: function register(name, email, password) {\n    return axios.post(\"\".concat(baseUrl, \"/\").concat(defaultPath, \"/register\"), {\n      name: name,\n      email: email,\n      password: password\n    });\n  },\n  updateUser: function updateUser(id, data) {\n    return axios.post(\"\".concat(baseUrl, \"/\").concat(defaultPath, \"/\").concat(id), data);\n  },\n  addFriend: function addFriend(id, data) {\n    return axios.post(\"\".concat(baseUrl, \"/\").concat(defaultPath, \"/\").concat(id, \"/new-friend\"), data);\n  },\n  blockFriend: function blockFriend(id, data) {\n    return axios.post(\"\".concat(baseUrl, \"/\").concat(defaultPath, \"/\").concat(id, \"/new-blocked\"), data);\n  },\n  requestFriend: function requestFriend(contactId, userId) {\n    return axios.post(\"\".concat(baseUrl, \"/\").concat(defaultPath, \"/\").concat(userId, \"/new-request\"), contactId);\n  },\n  searchUser: function searchUser(id, userQuery) {\n    return axios.get(\"\".concat(baseUrl, \"/\").concat(defaultPath, \"/\").concat(id, \"/search-user?user=\").concat(userQuery));\n  },\n  searchFriend: function searchFriend(id, friendQuery) {\n    return axios.get(\"\".concat(baseUrl, \"/\").concat(defaultPath, \"/\").concat(id, \"/search-friend?friend=\").concat(friendQuery));\n  },\n  getChatList: function getChatList(id) {\n    return axios.get(\"\".concat(baseUrl, \"/\").concat(defaultPath, \"/\").concat(id, \"/chat-list\"));\n  },\n  getFriendList: function getFriendList(id) {\n    return axios.get(\"\".concat(baseUrl, \"/\").concat(defaultPath, \"/\").concat(id, \"/friend-list\"));\n  },\n  getRequestList: function getRequestList(id) {\n    return axios.get(\"\".concat(baseUrl, \"/\").concat(defaultPath, \"/\").concat(id, \"/request-list\"));\n  },\n  getBlockedList: function getBlockedList(id) {\n    return axios.get(\"\".concat(baseUrl, \"/\").concat(defaultPath, \"/\").concat(id, \"/blocked-list\"));\n  },\n  deleteChat: function deleteChat(id, chat) {\n    return axios.put(\"\".concat(baseUrl, \"/\").concat(defaultPath, \"/\").concat(id), {\n      chat: chat\n    });\n  },\n  deleteFriend: function deleteFriend(id, friend) {\n    return axios.put(\"\".concat(baseUrl, \"/\").concat(defaultPath, \"/\").concat(id), {\n      friend: friend\n    });\n  },\n  deleteBlocked: function deleteBlocked(id, blocked) {\n    return axios.put(\"\".concat(baseUrl, \"/\").concat(defaultPath, \"/\").concat(id), {\n      blocked: blocked\n    });\n  },\n  deleteRequest: function deleteRequest(id, request) {\n    return axios.put(\"\".concat(baseUrl, \"/\").concat(defaultPath, \"/\").concat(id), {\n      request: request\n    });\n  },\n  deleteUser: function deleteUser(id) {\n    return axios.delete(\"\".concat(baseUrl, \"/\").concat(defaultPath, \"/\").concat(id));\n  }\n};","map":{"version":3,"sources":["/home/yamakasi/React/react_chat_socketio/src/api/user.js"],"names":["axios","baseUrl","defaultPath","getUsers","get","getUser","id","login","email","password","post","register","name","updateUser","data","addFriend","blockFriend","requestFriend","contactId","userId","searchUser","userQuery","searchFriend","friendQuery","getChatList","getFriendList","getRequestList","getBlockedList","deleteChat","chat","put","deleteFriend","friend","deleteBlocked","blocked","deleteRequest","request","deleteUser","delete"],"mappings":"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","sourcesContent":["import axios from \"axios\";\nimport { baseUrl } from \"./\";\n\nconst defaultPath = \"users\";\n\nexport default {\n  getUsers: () => axios.get(`${baseUrl}/${defaultPath}`),\n\n  getUser: id => axios.get(`${baseUrl}/${defaultPath}/${id}`),\n\n  login: (email, password) =>\n    axios.post(`${baseUrl}/${defaultPath}/login`, { email, password }),\n\n  register: (name, email, password) =>\n    axios.post(`${baseUrl}/${defaultPath}/register`, { name, email, password }),\n\n  updateUser: (id, data) => axios.post(`${baseUrl}/${defaultPath}/${id}`, data),\n\n  addFriend: (id, data) => axios.post(`${baseUrl}/${defaultPath}/${id}/new-friend`, data),\n\n  blockFriend: (id, data) =>\n    axios.post(`${baseUrl}/${defaultPath}/${id}/new-blocked`, data),\n\n  requestFriend: (contactId, userId) =>\n    axios.post(`${baseUrl}/${defaultPath}/${userId}/new-request`, contactId),\n\n  searchUser: (id, userQuery) =>\n    axios.get(`${baseUrl}/${defaultPath}/${id}/search-user?user=${userQuery}`),\n\n  searchFriend: (id, friendQuery) =>\n    axios.get(\n      `${baseUrl}/${defaultPath}/${id}/search-friend?friend=${friendQuery}`\n    ),\n\n  getChatList: id => axios.get(`${baseUrl}/${defaultPath}/${id}/chat-list`),\n\n  getFriendList: id => axios.get(`${baseUrl}/${defaultPath}/${id}/friend-list`),\n\n  getRequestList: id =>\n    axios.get(`${baseUrl}/${defaultPath}/${id}/request-list`),\n\n  getBlockedList: id =>\n    axios.get(`${baseUrl}/${defaultPath}/${id}/blocked-list`),\n\n  deleteChat: (id, chat) =>\n    axios.put(`${baseUrl}/${defaultPath}/${id}`, { chat }),\n\n  deleteFriend: (id, friend) =>\n    axios.put(`${baseUrl}/${defaultPath}/${id}`, { friend }),\n\n  deleteBlocked: (id, blocked) =>\n    axios.put(`${baseUrl}/${defaultPath}/${id}`, { blocked }),\n\n  deleteRequest: (id, request) =>\n    axios.put(`${baseUrl}/${defaultPath}/${id}`, { request }),\n\n  deleteUser: id => axios.delete(`${baseUrl}/${defaultPath}/${id}`)\n};\n"]},"metadata":{},"sourceType":"module"}
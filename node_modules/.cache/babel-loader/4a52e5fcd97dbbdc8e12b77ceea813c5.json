{"ast":null,"code":"import _slicedToArray from \"/home/yamakasi/React/react_chat_socketio/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _taggedTemplateLiteral from \"/home/yamakasi/React/react_chat_socketio/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/home/yamakasi/React/react_chat_socketio/src/components/chats/Chat.jsx\";\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteral([\"\\n  position: absolute;\\n  top: 50%;\\n  left: 50%;\\n  transform: translate(-50%, -50%);\\n\"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  background-image: linear-gradient(75deg, rgba(215, 215, 215, 0.06) 0%, rgba(215, 215, 215, 0.06) 50%,rgba(67, 67, 67, 0.06) 50%, rgba(67, 67, 67, 0.06) 100%),linear-gradient(123deg, rgba(236, 236, 236, 0.1) 0%, rgba(236, 236, 236, 0.1) 50%,rgba(116, 116, 116, 0.1) 50%, rgba(116, 116, 116, 0.1) 100%),linear-gradient(152deg, rgba(136, 136, 136, 0.06) 0%, rgba(136, 136, 136, 0.06) 50%,rgba(145, 145, 145, 0.06) 50%, rgba(145, 145, 145, 0.06) 100%),linear-gradient(278deg, rgba(9, 9, 9, 0.06) 0%, rgba(9, 9, 9, 0.06) 50%,rgba(37, 37, 37, 0.06) 50%, rgba(37, 37, 37, 0.06) 100%),linear-gradient(353deg, rgba(0, 0, 0, 0.05) 0%, rgba(0, 0, 0, 0.05) 50%,rgba(167, 167, 167, 0.05) 50%, rgba(167, 167, 167, 0.05) 100%),linear-gradient(319deg, rgba(228, 228, 228, 0.06) 0%, rgba(228, 228, 228, 0.06) 50%,rgba(14, 14, 14, 0.06) 50%, rgba(14, 14, 14, 0.06) 100%),linear-gradient(3deg, rgba(145, 145, 145, 0.07) 0%, rgba(145, 145, 145, 0.07) 50%,rgba(216, 216, 216, 0.07) 50%, rgba(216, 216, 216, 0.07) 100%),linear-gradient(161deg, rgba(211, 211, 211, 0.02) 0%, rgba(211, 211, 211, 0.02) 50%,rgba(194, 194, 194, 0.02) 50%, rgba(194, 194, 194, 0.02) 100%),linear-gradient(307deg, rgba(200, 200, 200, 0.08) 0%, rgba(200, 200, 200, 0.08) 50%,rgba(117, 117, 117, 0.08) 50%, rgba(117, 117, 117, 0.08) 100%),linear-gradient(90deg, rgb(48, 195, 152),rgb(3, 109, 68));\\n  width: auto;\\n  position: relative;\\n  overflow: hidden;\\n  max-height: 100vh;\\n  overflow: hidden;\\n\\n  @media \", \" {\\n    width: 100vw;\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { useState, useEffect } from \"react\";\nimport { Route } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport MessageForm from \"../forms/MessageForm\";\nimport MessageList from \"../messages/MessageList\";\nimport ChatHeader from \"../header/ChatHeader\";\nimport Dropdown from \"../dropdown/Dropdown\";\nimport DropdownItem from \"../dropdown/DropdownItem\";\nimport { useAppHooks } from \"../../contexts\";\nimport devices from \"../../utils/devices\";\nimport api from \"../../api\";\nvar ChatStyle = styled.div(_templateObject(), devices.mobileL);\nvar NoChatStyle = styled.div(_templateObject2());\n\nvar Chat = function Chat(_ref) {\n  var location = _ref.location,\n      match = _ref.match;\n\n  var _useAppHooks = useAppHooks(),\n      useTransition = _useAppHooks.useTransition,\n      socket = _useAppHooks.socket;\n\n  var _useTransition = _slicedToArray(useTransition, 2),\n      chatSelected = _useTransition[0].chatSelected,\n      _ = _useTransition[1];\n\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      chat = _useState2[0],\n      setChat = _useState2[1];\n\n  var _useState3 = useState(0),\n      _useState4 = _slicedToArray(_useState3, 2),\n      y = _useState4[0],\n      setY = _useState4[1];\n\n  var _useState5 = useState(false),\n      _useState6 = _slicedToArray(_useState5, 2),\n      isDisplayed = _useState6[0],\n      setDisplay = _useState6[1];\n\n  var getHeaderPosition = function getHeaderPosition(isDisplayed, y) {\n    setDisplay(isDisplayed);\n    setY(y);\n  };\n\n  useEffect(function () {// if (!chat && !chatSelected) {\n    //   socket.on(\"fetch-chat\", chatFetched => {\n    //     setChat(chatFetched);\n    //   });\n    // }\n    // const chat = await api.chat.getChat()\n  }, [chat, chatSelected, socket]);\n  console.log(location);\n  return React.createElement(ChatStyle, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, chat ? React.createElement(Route, {\n    exact: true,\n    path: \"\".concat(match.url, \"/chats/:id\"),\n    render: function render(props) {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }, React.createElement(ChatHeader, {\n        getHeaderPosition: getHeaderPosition,\n        isDisplayed: isDisplayed,\n        chat: chat,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }), React.createElement(Dropdown, {\n        propsY: y,\n        isDisplayed: isDisplayed,\n        handleDropdown: setDisplay,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }, React.createElement(DropdownItem, {\n        handleClick: function handleClick() {\n          return setDisplay(false);\n        },\n        text: \"Add User to Chat\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      })), React.createElement(MessageList, {\n        messages: chat.messages,\n        users: chat.users,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }), React.createElement(MessageForm, {\n        chatId: chat.id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }));\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }) : React.createElement(NoChatStyle, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  }, \"Select a chat or create one by choosing one of your contact\"));\n};\n\nexport default Chat;","map":{"version":3,"sources":["/home/yamakasi/React/react_chat_socketio/src/components/chats/Chat.jsx"],"names":["React","useState","useEffect","Route","styled","MessageForm","MessageList","ChatHeader","Dropdown","DropdownItem","useAppHooks","devices","api","ChatStyle","div","mobileL","NoChatStyle","Chat","location","match","useTransition","socket","chatSelected","_","chat","setChat","y","setY","isDisplayed","setDisplay","getHeaderPosition","console","log","url","props","messages","users","id"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { Route } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\nimport MessageForm from \"../forms/MessageForm\";\r\nimport MessageList from \"../messages/MessageList\";\r\nimport ChatHeader from \"../header/ChatHeader\";\r\nimport Dropdown from \"../dropdown/Dropdown\";\r\nimport DropdownItem from \"../dropdown/DropdownItem\";\r\nimport { useAppHooks } from \"../../contexts\";\r\nimport devices from \"../../utils/devices\";\r\nimport api from \"../../api\";\r\n\r\nconst ChatStyle = styled.div`\r\n  background-image: linear-gradient(75deg, rgba(215, 215, 215, 0.06) 0%, rgba(215, 215, 215, 0.06) 50%,rgba(67, 67, 67, 0.06) 50%, rgba(67, 67, 67, 0.06) 100%),linear-gradient(123deg, rgba(236, 236, 236, 0.1) 0%, rgba(236, 236, 236, 0.1) 50%,rgba(116, 116, 116, 0.1) 50%, rgba(116, 116, 116, 0.1) 100%),linear-gradient(152deg, rgba(136, 136, 136, 0.06) 0%, rgba(136, 136, 136, 0.06) 50%,rgba(145, 145, 145, 0.06) 50%, rgba(145, 145, 145, 0.06) 100%),linear-gradient(278deg, rgba(9, 9, 9, 0.06) 0%, rgba(9, 9, 9, 0.06) 50%,rgba(37, 37, 37, 0.06) 50%, rgba(37, 37, 37, 0.06) 100%),linear-gradient(353deg, rgba(0, 0, 0, 0.05) 0%, rgba(0, 0, 0, 0.05) 50%,rgba(167, 167, 167, 0.05) 50%, rgba(167, 167, 167, 0.05) 100%),linear-gradient(319deg, rgba(228, 228, 228, 0.06) 0%, rgba(228, 228, 228, 0.06) 50%,rgba(14, 14, 14, 0.06) 50%, rgba(14, 14, 14, 0.06) 100%),linear-gradient(3deg, rgba(145, 145, 145, 0.07) 0%, rgba(145, 145, 145, 0.07) 50%,rgba(216, 216, 216, 0.07) 50%, rgba(216, 216, 216, 0.07) 100%),linear-gradient(161deg, rgba(211, 211, 211, 0.02) 0%, rgba(211, 211, 211, 0.02) 50%,rgba(194, 194, 194, 0.02) 50%, rgba(194, 194, 194, 0.02) 100%),linear-gradient(307deg, rgba(200, 200, 200, 0.08) 0%, rgba(200, 200, 200, 0.08) 50%,rgba(117, 117, 117, 0.08) 50%, rgba(117, 117, 117, 0.08) 100%),linear-gradient(90deg, rgb(48, 195, 152),rgb(3, 109, 68));\r\n  width: auto;\r\n  position: relative;\r\n  overflow: hidden;\r\n  max-height: 100vh;\r\n  overflow: hidden;\r\n\r\n  @media ${devices.mobileL} {\r\n    width: 100vw;\r\n  }\r\n`;\r\n\r\nconst NoChatStyle = styled.div`\r\n  position: absolute;\r\n  top: 50%;\r\n  left: 50%;\r\n  transform: translate(-50%, -50%);\r\n`;\r\n\r\nconst Chat = ({ location, match }) => {\r\n  const { useTransition, socket } = useAppHooks();\r\n\r\n  const [{ chatSelected }, _] = useTransition;\r\n\r\n  const [chat, setChat] = useState(null);\r\n  const [y, setY] = useState(0);\r\n  const [isDisplayed, setDisplay] = useState(false);\r\n\r\n  const getHeaderPosition = (isDisplayed, y) => {\r\n    setDisplay(isDisplayed);\r\n    setY(y);\r\n  };\r\n\r\n  useEffect(() => {\r\n    // if (!chat && !chatSelected) {\r\n    //   socket.on(\"fetch-chat\", chatFetched => {\r\n    //     setChat(chatFetched);\r\n    //   });\r\n    // }\r\n    // const chat = await api.chat.getChat()\r\n  }, [chat, chatSelected, socket]);\r\n  console.log(location)  \r\n  return (\r\n    <ChatStyle>\r\n      {chat ? (\r\n        <Route\r\n          exact\r\n          path={`${match.url}/chats/:id`}\r\n          render={\r\n            props => (\r\n              <div>\r\n                <ChatHeader\r\n                  getHeaderPosition={getHeaderPosition}\r\n                  isDisplayed={isDisplayed}\r\n                  chat={chat}\r\n                />\r\n                <Dropdown\r\n                  propsY={y}\r\n                  isDisplayed={isDisplayed}\r\n                  handleDropdown={setDisplay}\r\n                >\r\n                  <DropdownItem\r\n                    handleClick={() => setDisplay(false)}\r\n                    text=\"Add User to Chat\"\r\n                  />\r\n                </Dropdown>\r\n                <MessageList messages={chat.messages} users={chat.users} />\r\n                <MessageForm chatId={chat.id} />\r\n              </div>\r\n            )\r\n          }\r\n        />\r\n      ) : (\r\n        <NoChatStyle>\r\n          Select a chat or create one by choosing one of your contact\r\n        </NoChatStyle>\r\n      )}\r\n    </ChatStyle>\r\n  );\r\n};\r\n\r\nexport default Chat;\r\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import _slicedToArray from \"/home/yamakasi/React/react_chat_socketio/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _taggedTemplateLiteral from \"/home/yamakasi/React/react_chat_socketio/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/home/yamakasi/React/react_chat_socketio/src/components/header/ChatHeader.jsx\";\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  width: 100%;\\n  height: 50px;\\n  border-bottom: 1px solid rgba(0, 0, 0, 0.5);\\n  position: absolute;\\n  padding: 0 0 0 25px;\\n  margin: 0;\\n  top: 0;\\n  left: 0;\\n  background: #f5f5f5;\\n  display: flex;\\n  align-items: center;\\n  color: black;\\n\\n  & > .go-back {\\n    display: none;\\n  }\\n\\n  & > h4 {\\n    padding: 0;\\n    margin: 0 0 0 15px;\\n  }\\n\\n  & > .img-contact {\\n    width: 40px;\\n    line-height: 30px;\\n    border-radius: 50%;\\n    height: 40px;\\n    text-align: center;\\n    font-size: 2em;\\n    background-color: white;\\n    border: 2px solid #aaa;\\n    cursor: pointer;\\n  }\\n\\n  & > .btn-option {\\n    text-align: center;\\n    position: absolute;\\n    right: 5%;\\n    top: 50%;\\n    transform: translateY(-50%);\\n    padding: 5px;\\n    margin: 0;\\n    font-size: 1.2em;\\n    border-radius: 4px;\\n    box-shadow: 2px 2px 8px rgba(0, 0, 0, 0.4);\\n    width: 40px;\\n    cursor: pointer;\\n  }\\n\\n  & .user-header-typing {\\n    margin-left: 30px;\\n    font-style: italic;\\n  }\\n\\n  & .users-header-typing {\\n    font-style: italic;\\n    font-size: 0.8em;\\n  }\\n\\n  @media \", \" {\\n    & > .go-back {\\n      display: inline-block;\\n      padding: 5px;\\n      border-radius: 4px;\\n      box-shadow: 2px 2px 8px rgba(0, 0, 0, 0.4);\\n      width: 40px;\\n      cursor: pointer;\\n    }\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { useEffect, useRef, useState } from \"react\";\nimport { Icon } from 'semantic-ui-react';\nimport styled from \"styled-components\";\nimport { useAppHooks } from \"../../contexts\";\nimport { CHAT_UNSELECTED } from \"../../reducers/transitionReducer\";\nimport devices from \"../../utils/devices\";\nimport { useTransition } from \"../../contexts/transitionContext\";\nvar ChatHeaderStyle = styled.header(_templateObject(), devices.mobileL);\n\nvar ChatHeader = function ChatHeader(_ref) {\n  var getHeaderPosition = _ref.getHeaderPosition,\n      isDisplayed = _ref.isDisplayed,\n      users = _ref.users;\n\n  var _useAppHooks = useAppHooks(),\n      useTransition = _useAppHooks.useTransition,\n      socket = _useAppHooks.socket;\n\n  var _useTransition = _slicedToArray(useTransition, 2),\n      chatSelected = _useTransition[0],\n      dispatchTransition = _useTransition[1];\n\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      isTyping = _useState2[0],\n      setTyping = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      isSelected = _useState4[0],\n      setSelected = _useState4[1];\n\n  var headerRef = useRef();\n\n  var handleTransition = function handleTransition(e) {\n    dispatchTransition({\n      type: CHAT_UNSELECTED,\n      payload: false\n    });\n  };\n\n  var handleClick = function handleClick(e) {\n    getHeaderPosition(!isDisplayed, headerRef.current.getBoundingClientRect().height);\n  };\n\n  socket.on(\"is-typing\", function (data) {\n    return setTyping(data);\n  });\n  socket.on('request-confirm', function (data) {\n    console.log(data);\n  }); // useEffect(() => {\n  //   if (localStorage.user) {\n  //     setDest(chat.users.find(user => user.user !== localStorage.user));\n  //   }\n  // }, [localStorage.user, dest, chat.users]);\n\n  useEffect(function () {\n    setSelected(!isSelected);\n  }, []);\n  return React.createElement(ChatHeaderStyle, {\n    ref: headerRef,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    className: \"btn-option\",\n    onClick: handleClick,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120\n    },\n    __self: this\n  }, \"+\"), React.createElement(\"span\", {\n    className: \"go-back\",\n    onClick: handleTransition,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123\n    },\n    __self: this\n  }, React.createElement(Icon, {\n    name: \"arrow left\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124\n    },\n    __self: this\n  })), users.length > 1 && React.createElement(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    className: \"img-contact\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129\n    },\n    __self: this\n  }, \"G\"), users.slice(0, 2).map(function (user, i) {\n    if (i < 2) {\n      return React.createElement(\"span\", {\n        key: i,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135\n        },\n        __self: this\n      }, user.name, i < users.length - 1 && ', ');\n    } else {\n      return React.createElement(\"h4\", {\n        key: i,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138\n        },\n        __self: this\n      }, \"+\", users.length - 2);\n    }\n  }), isTyping && isTyping.status && React.createElement(\"span\", {\n    className: \"users-header-typing\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144\n    },\n    __self: this\n  }, users.find(function (u) {\n    return u.id === isTyping.id;\n  }).name, \" is typing...\")), users.length === 1 && React.createElement(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151\n    },\n    __self: this\n  }, users.map(function (user) {\n    return React.createElement(\"span\", {\n      className: \"img-contact\",\n      key: user.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154\n      },\n      __self: this\n    }, user.name[0].toUpperCase());\n  }), users.map(function (user) {\n    return React.createElement(\"h4\", {\n      key: user.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160\n      },\n      __self: this\n    }, user.name);\n  }), isTyping && isTyping.status && React.createElement(\"span\", {\n    className: \"user-header-typing\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162\n    },\n    __self: this\n  }, \"is typing...\")));\n};\n\nexport default ChatHeader;","map":{"version":3,"sources":["/home/yamakasi/React/react_chat_socketio/src/components/header/ChatHeader.jsx"],"names":["React","useEffect","useRef","useState","Icon","styled","useAppHooks","CHAT_UNSELECTED","devices","useTransition","ChatHeaderStyle","header","mobileL","ChatHeader","getHeaderPosition","isDisplayed","users","socket","chatSelected","dispatchTransition","isTyping","setTyping","isSelected","setSelected","headerRef","handleTransition","e","type","payload","handleClick","current","getBoundingClientRect","height","on","data","console","log","length","slice","map","user","i","name","status","find","u","id","toUpperCase"],"mappings":"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","sourcesContent":["import React, { useEffect, useRef, useState } from \"react\";\r\nimport { Icon } from 'semantic-ui-react'\r\nimport styled from \"styled-components\";\r\nimport { useAppHooks } from \"../../contexts\";\r\nimport { CHAT_UNSELECTED } from \"../../reducers/transitionReducer\";\r\nimport devices from \"../../utils/devices\";\r\nimport { useTransition } from \"../../contexts/transitionContext\";\r\n\r\nconst ChatHeaderStyle = styled.header`\r\n  width: 100%;\r\n  height: 50px;\r\n  border-bottom: 1px solid rgba(0, 0, 0, 0.5);\r\n  position: absolute;\r\n  padding: 0 0 0 25px;\r\n  margin: 0;\r\n  top: 0;\r\n  left: 0;\r\n  background: #f5f5f5;\r\n  display: flex;\r\n  align-items: center;\r\n  color: black;\r\n\r\n  & > .go-back {\r\n    display: none;\r\n  }\r\n\r\n  & > h4 {\r\n    padding: 0;\r\n    margin: 0 0 0 15px;\r\n  }\r\n\r\n  & > .img-contact {\r\n    width: 40px;\r\n    line-height: 30px;\r\n    border-radius: 50%;\r\n    height: 40px;\r\n    text-align: center;\r\n    font-size: 2em;\r\n    background-color: white;\r\n    border: 2px solid #aaa;\r\n    cursor: pointer;\r\n  }\r\n\r\n  & > .btn-option {\r\n    text-align: center;\r\n    position: absolute;\r\n    right: 5%;\r\n    top: 50%;\r\n    transform: translateY(-50%);\r\n    padding: 5px;\r\n    margin: 0;\r\n    font-size: 1.2em;\r\n    border-radius: 4px;\r\n    box-shadow: 2px 2px 8px rgba(0, 0, 0, 0.4);\r\n    width: 40px;\r\n    cursor: pointer;\r\n  }\r\n\r\n  & .user-header-typing {\r\n    margin-left: 30px;\r\n    font-style: italic;\r\n  }\r\n\r\n  & .users-header-typing {\r\n    font-style: italic;\r\n    font-size: 0.8em;\r\n  }\r\n\r\n  @media ${devices.mobileL} {\r\n    & > .go-back {\r\n      display: inline-block;\r\n      padding: 5px;\r\n      border-radius: 4px;\r\n      box-shadow: 2px 2px 8px rgba(0, 0, 0, 0.4);\r\n      width: 40px;\r\n      cursor: pointer;\r\n    }\r\n  }\r\n`;\r\n\r\nconst ChatHeader = ({ getHeaderPosition, isDisplayed, users }) => {\r\n  const { useTransition, socket } = useAppHooks();\r\n\r\n  const [chatSelected, dispatchTransition] = useTransition;\r\n\r\n  const [isTyping, setTyping] = useState(null);\r\n  const [isSelected, setSelected] = useState(false);\r\n\r\n  const headerRef = useRef();\r\n\r\n  const handleTransition = e => {\r\n    dispatchTransition({ type: CHAT_UNSELECTED, payload: false });\r\n  };\r\n\r\n  const handleClick = e => {\r\n    getHeaderPosition(\r\n      !isDisplayed,\r\n      headerRef.current.getBoundingClientRect().height\r\n    );\r\n  };\r\n\r\n  socket.on(\"is-typing\", data => setTyping(data));\r\n\r\n  socket.on('request-confirm', data => {\r\n    console.log(data)\r\n  })\r\n\r\n  // useEffect(() => {\r\n  //   if (localStorage.user) {\r\n  //     setDest(chat.users.find(user => user.user !== localStorage.user));\r\n  //   }\r\n  // }, [localStorage.user, dest, chat.users]);\r\n\r\n  useEffect(() => {\r\n    setSelected(!isSelected);\r\n  }, []);\r\n\r\n  return (\r\n    <ChatHeaderStyle ref={headerRef}>\r\n      <span className=\"btn-option\" onClick={handleClick}>\r\n        +\r\n      </span>\r\n      <span className=\"go-back\" onClick={handleTransition}>\r\n        <Icon name='arrow left' />\r\n      </span>\r\n      {\r\n        users.length > 1 && (\r\n          <React.Fragment>\r\n            <span className=\"img-contact\">\r\n              G\r\n            </span>\r\n            {\r\n              users.slice(0, 2).map((user, i) => {\r\n                if (i < 2) {\r\n                  return <span key={i}>{user.name}{i < users.length - 1 && ', '}</span>\r\n                }\r\n                else {\r\n                  return <h4 key={i}>+{users.length - 2}</h4>\r\n                }\r\n              })\r\n            }\r\n            {\r\n              isTyping && isTyping.status && \r\n              <span className=\"users-header-typing\">{users.find(u => u.id === isTyping.id).name} is typing...</span>\r\n            }\r\n          </React.Fragment>\r\n        )\r\n      }\r\n      {\r\n        users.length === 1 && (\r\n          <React.Fragment>\r\n            {\r\n              users.map(user => (\r\n                <span className=\"img-contact\" key={user.id}>\r\n                  {user.name[0].toUpperCase()}\r\n                </span>\r\n              ))\r\n            }\r\n            {\r\n              users.map(user => <h4 key={user.id}>{user.name}</h4>)\r\n            }\r\n            {isTyping && isTyping.status && <span className=\"user-header-typing\">is typing...</span>}\r\n          </React.Fragment>\r\n        )\r\n      }      \r\n    </ChatHeaderStyle>\r\n  );\r\n};\r\n\r\nexport default ChatHeader;\r\n"]},"metadata":{},"sourceType":"module"}
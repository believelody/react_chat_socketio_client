{"ast":null,"code":"import _regeneratorRuntime from \"/home/yamakasi/React/react_chat_socketio/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/yamakasi/React/react_chat_socketio/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _toConsumableArray from \"/home/yamakasi/React/react_chat_socketio/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _slicedToArray from \"/home/yamakasi/React/react_chat_socketio/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _taggedTemplateLiteral from \"/home/yamakasi/React/react_chat_socketio/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/home/yamakasi/React/react_chat_socketio/src/components/tabs/ChatTab.jsx\";\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"  \\n  & .number {\\n    margin-left: 8px;\\n    padding: 2px 8px;\\n    font-weight: bold;\\n    border-radius: 50%;\\n    // background: radial-gradient(circle at 2px 2px, #5cabff, #000);\\n    background: #c21500;  /* fallback for old browsers */\\nbackground: -webkit-radial-gradient(circle at 2px 2px, #EDDE5D, #F09819);  /* Chrome 10-25, Safari 5.1-6 */\\nbackground: radial-gradient(circle at 2px 2px, #EDDE5D, #F09819); /* W3C, IE 10+/ Edge, Firefox 16+, Chrome 26+, Opera 12+, Safari 7+ */\\n\\n    color: black;\\n    box-shadow: 2px 2px 4px rgba(0,0,0, .3);\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { useEffect, useState } from \"react\";\nimport styled from 'styled-components';\nimport { useAppHooks } from \"../../contexts\";\nimport api from \"../../api\";\nimport { socketOn } from \"../../socket\";\nvar ChatsTabStyle = styled.div(_templateObject());\n\nvar ChatsTab = function ChatsTab() {\n  var _useAppHooks = useAppHooks(),\n      useAuth = _useAppHooks.useAuth,\n      socket = _useAppHooks.socket;\n\n  var _useAuth = _slicedToArray(useAuth, 2),\n      user = _useAuth[0].user,\n      dispatchAuth = _useAuth[1];\n\n  var _useState = useState(0),\n      _useState2 = _slicedToArray(_useState, 2),\n      nbUnread = _useState2[0],\n      setUnread = _useState2[1];\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      chatUnreads = _useState4[0],\n      setChatUnread = _useState4[1];\n\n  socketOn('count-unread-chat', socket, user, function (data, user) {\n    if (user && data && data.users.find(function (u) {\n      return u.id === user.id;\n    }) && !chatUnreads.find(function (chatId) {\n      return chatId === data.chat.id;\n    })) {\n      console.log('chat-tab');\n      setChatUnread([].concat(_toConsumableArray(chatUnreads), [data.chat.id]));\n      setUnread(nbUnread + 1);\n    }\n  });\n  socketOn('count-read-chat', socket, user, function (data, user) {\n    if (user && data && chatUnreads.find(function (chatId) {\n      return chatId === data.chat.id;\n    }) && data.chat.users.find(function (u) {\n      return u.id === user.id;\n    }) && data.userId === user.id) {\n      setChatUnread(chatUnreads.filter(function (chatId) {\n        return chatId !== data.chat.id;\n      }));\n      setUnread(nbUnread === 1 ? 0 : nbUnread - 1);\n    }\n  });\n  /* socketOn('new-chat', socket, user, (data, user) => {\r\n    if (data.users.find(u => u.id === user.id)) {\r\n      setUnread(nbUnread + 1)\r\n    }\r\n  }) */\n\n  useEffect(function () {\n    var fetchChat =\n    /*#__PURE__*/\n    function () {\n      var _ref = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee() {\n        var res, unreadChats;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.prev = 0;\n                _context.next = 3;\n                return api.user.getChatList(user.id);\n\n              case 3:\n                res = _context.sent;\n\n                if (res.data.chats.length > 0) {\n                  unreadChats = res.data.chats.filter(function (c) {\n                    return c.unreads.length > 0 && c.unreads.find(function (u) {\n                      return u.authorId !== user.id;\n                    });\n                  });\n\n                  if (unreadChats.length > 0 && unreadChats.find(function (chat) {\n                    return chat.unreads.find(function (unread) {\n                      return unread.authorId !== user.id;\n                    });\n                  })) {\n                    setChatUnread(unreadChats.map(function (chat) {\n                      return chat.id;\n                    }));\n                    setUnread(unreadChats.length);\n                  }\n                }\n\n                _context.next = 10;\n                break;\n\n              case 7:\n                _context.prev = 7;\n                _context.t0 = _context[\"catch\"](0);\n                console.log(_context.t0); // alert(error.response.data.msg)\n\n              case 10:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, null, [[0, 7]]);\n      }));\n\n      return function fetchChat() {\n        return _ref.apply(this, arguments);\n      };\n    }();\n\n    if (user) fetchChat();\n  }, [user]);\n  return React.createElement(ChatsTabStyle, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    className: \"label\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }, \"Chats\"), nbUnread > 0 && React.createElement(\"span\", {\n    className: \"number\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }, nbUnread));\n};\n\nexport default ChatsTab;","map":{"version":3,"sources":["/home/yamakasi/React/react_chat_socketio/src/components/tabs/ChatTab.jsx"],"names":["React","useEffect","useState","styled","useAppHooks","api","socketOn","ChatsTabStyle","div","ChatsTab","useAuth","socket","user","dispatchAuth","nbUnread","setUnread","chatUnreads","setChatUnread","data","users","find","u","id","chatId","chat","console","log","userId","filter","fetchChat","getChatList","res","chats","length","unreadChats","c","unreads","authorId","unread","map"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport styled from 'styled-components'\r\nimport { useAppHooks } from \"../../contexts\";\r\nimport api from \"../../api\";\r\nimport { socketOn } from \"../../socket\";\r\n\r\nconst ChatsTabStyle = styled.div`  \r\n  & .number {\r\n    margin-left: 8px;\r\n    padding: 2px 8px;\r\n    font-weight: bold;\r\n    border-radius: 50%;\r\n    // background: radial-gradient(circle at 2px 2px, #5cabff, #000);\r\n    background: #c21500;  /* fallback for old browsers */\r\nbackground: -webkit-radial-gradient(circle at 2px 2px, #EDDE5D, #F09819);  /* Chrome 10-25, Safari 5.1-6 */\r\nbackground: radial-gradient(circle at 2px 2px, #EDDE5D, #F09819); /* W3C, IE 10+/ Edge, Firefox 16+, Chrome 26+, Opera 12+, Safari 7+ */\r\n\r\n    color: black;\r\n    box-shadow: 2px 2px 4px rgba(0,0,0, .3);\r\n  }\r\n`\r\n\r\nconst ChatsTab = () => {\r\n  const { useAuth, socket } = useAppHooks()\r\n  const [{user}, dispatchAuth] = useAuth\r\n\r\n  const [nbUnread, setUnread] = useState(0)\r\n  const [chatUnreads, setChatUnread] = useState([])\r\n\r\n  socketOn('count-unread-chat', socket, user, (data, user) => {\r\n    if (user && data && data.users.find(u => u.id === user.id) && !chatUnreads.find(chatId => chatId === data.chat.id)) {\r\n      console.log('chat-tab')\r\n      setChatUnread([...chatUnreads, data.chat.id])\r\n      setUnread(nbUnread + 1)\r\n    }\r\n  })\r\n\r\n  socketOn('count-read-chat', socket, user, (data, user) => {\r\n    if (user && data && chatUnreads.find(chatId => chatId === data.chat.id) && data.chat.users.find(u => u.id === user.id) && data.userId === user.id) {\r\n      setChatUnread(chatUnreads.filter(chatId => chatId !== data.chat.id))\r\n      setUnread(nbUnread === 1 ? 0 : nbUnread - 1)\r\n    }\r\n  })\r\n\r\n  /* socketOn('new-chat', socket, user, (data, user) => {\r\n    if (data.users.find(u => u.id === user.id)) {\r\n      setUnread(nbUnread + 1)\r\n    }\r\n  }) */\r\n\r\n  useEffect(() => {\r\n    const fetchChat = async () => {\r\n      try {\r\n        const res = await api.user.getChatList(user.id)\r\n        if (res.data.chats.length > 0) {\r\n          let unreadChats = res.data.chats.filter(c => c.unreads.length > 0 && c.unreads.find(u => u.authorId !== user.id))\r\n          if (unreadChats.length > 0 && unreadChats.find(chat => chat.unreads.find(unread => unread.authorId !== user.id))){\r\n            setChatUnread(unreadChats.map(chat => chat.id))\r\n            setUnread(unreadChats.length)\r\n          }\r\n        }\r\n      } catch (error) {\r\n        console.log(error)\r\n        // alert(error.response.data.msg)\r\n      }\r\n    }\r\n\r\n    if (user) fetchChat()\r\n  }, [user])\r\n\r\n  return (\r\n    <ChatsTabStyle>\r\n      <span className='label'>Chats</span>\r\n      {nbUnread > 0 && <span className='number'>{nbUnread}</span>}\r\n    </ChatsTabStyle>\r\n  );\r\n};\r\n\r\nexport default ChatsTab;\r\n"]},"metadata":{},"sourceType":"module"}
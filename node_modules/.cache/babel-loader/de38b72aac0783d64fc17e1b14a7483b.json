{"ast":null,"code":"import _slicedToArray from \"/home/yamakasi/React/react_chat_socketio/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _taggedTemplateLiteral from \"/home/yamakasi/React/react_chat_socketio/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/home/yamakasi/React/react_chat_socketio/src/components/friends/NotFriend.jsx\";\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n    text-align: center;\\n    background-color: transparent;\\n    color: black;\\n    position: absolute;\\n    padding: 5px 0px;\\n    width: 100%;\\n    height: auto;\\n    bottom: 80px;\\n    left: 50%;\\n    transform: translate3d(-50%, 0, 0);\\n\\n    & .blocked-request {\\n        margin-left: 10px;\\n        text-transform: uppercase;\\n        // border-radius: 4px;\\n        box-shadow: 2px 2px 4px rgba(0, 0, 0, .4);\\n    }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { useEffect, useState } from 'react';\nimport { Button } from 'semantic-ui-react';\nimport styled from 'styled-components';\nimport { useAppHooks } from '../../contexts';\nimport api from '../../api';\nimport { socketEmit, socketOn } from '../../socket';\nvar NotFriendStyle = styled.div(_templateObject());\n\nvar NotFriend = function NotFriend(_ref) {\n  var contact = _ref.contact;\n\n  var _useAppHooks = useAppHooks(),\n      useAuth = _useAppHooks.useAuth,\n      socket = _useAppHooks.socket;\n\n  var _useAuth = _slicedToArray(useAuth, 2),\n      user = _useAuth[0].user,\n      _ = _useAuth[1];\n\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      isFriend = _useState2[0],\n      setIsFriend = _useState2[1];\n\n  var _useState3 = useState(null),\n      _useState4 = _slicedToArray(_useState3, 2),\n      isRequest = _useState4[0],\n      setIsRequest = _useState4[1];\n\n  var _useState5 = useState(null),\n      _useState6 = _slicedToArray(_useState5, 2),\n      hasBlocked = _useState6[0],\n      setHasBlock = _useState6[1];\n\n  var _useState7 = useState(null),\n      _useState8 = _slicedToArray(_useState7, 2),\n      isBlocked = _useState8[0],\n      setIsBlock = _useState8[1];\n\n  var unblockContact = function unblockContact() {\n    alert('contact blocked');\n    socketEmit('check-is-blocked', socket, contact);\n    socketEmit('check-has-blocked', socket, contact);\n  };\n\n  var blockContact = function blockContact() {\n    alert('contact blocked');\n    socketEmit('check-is-blocked', socket, contact);\n    socketEmit('check-has-blocked', socket, contact);\n  };\n\n  var acceptContact = function acceptContact() {\n    alert('friend\\'s request accepted');\n    socketEmit('check-friend', socket, contact);\n    socketEmit('check-request', socket, contact);\n  };\n\n  socketOn('check-friend-response', socket, contact, function (_ref2, contact) {\n    var friend = _ref2.friend;\n\n    if (friend.id === contact.id) {\n      setIsFriend(friend.status);\n    }\n  });\n  socketOn('check-request-response', socket, contact, function (_ref3, contact) {\n    var request = _ref3.request;\n\n    if (request.id === contact.id) {\n      setIsRequest(request.status);\n    }\n  });\n  socketOn('check-is-blocked-response', socket, user, function (_ref4, user) {\n    var isBlocked = _ref4.isBlocked;\n\n    if (isBlocked.id === user.id) {\n      setIsBlock(isBlocked.status);\n    }\n  });\n  socketOn('check-has-blocked-response', socket, contact, function (_ref5, contact) {\n    var hasBlocked = _ref5.hasBlocked;\n\n    if (hasBlocked.id === contact.id) {\n      setHasBlock(hasBlocked.status);\n    }\n  });\n  useEffect(function () {\n    socketEmit('check-friend', socket, contact);\n    socketEmit('check-request', socket, contact);\n    socketEmit('check-is-blocked', socket, contact);\n    socketEmit('check-has-blocked', socket, contact);\n    /* const checkFriend = async () => {\n        const res = await api.user.getFriendList(user.id)\n        const friends = res.data\n        if (friends.length > 0) {\n            let match = friends.find(friend => friend.id === contact.id)\n            if (match) {\n                setIsFriend(match)\n            }\n            else {\n                setIsFriend(null)\n            }\n        }\n    }\n     checkFriend() */\n  }, []);\n  return React.createElement(NotFriendStyle, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99\n    },\n    __self: this\n  }, !isFriend && !isRequest && !hasBlocked && !isBlocked && React.createElement(\"span\", {\n    className: \"not-friend\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102\n    },\n    __self: this\n  }, \"This contact is not among your friends. Do you want to block him?\", React.createElement(Button, {\n    className: \"blocked-request\",\n    onClick: blockContact,\n    content: React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }, \"Yes\"),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104\n    },\n    __self: this\n  })), !isFriend && isRequest && !hasBlocked && !isBlocked && isRequest.id === contact.id && React.createElement(\"span\", {\n    className: \"not-friend\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109\n    },\n    __self: this\n  }, \"This contact sent you a friend's request. What do you want to do?\", React.createElement(Button, {\n    className: \"blocked-request\",\n    onClick: acceptContact,\n    content: React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }, \"Accept\"),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111\n    },\n    __self: this\n  }), React.createElement(\"span\", {\n    className: \"or\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112\n    },\n    __self: this\n  }, \"Or\"), React.createElement(Button, {\n    className: \"blocked-request\",\n    onClick: blockContact,\n    content: React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }, \"Block\"),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113\n    },\n    __self: this\n  })), !isFriend && !isRequest && hasBlocked && isBlocked && hasBlocked.id === contact.id && React.createElement(\"span\", {\n    className: \"not-friend\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118\n    },\n    __self: this\n  }, \"This contact has been blocked. You Do you want to unblock him?\", React.createElement(Button, {\n    className: \"blocked-request\",\n    onClick: unblockContact,\n    content: React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }, \"Yes\"),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120\n    },\n    __self: this\n  })), !isFriend && !isRequest && hasBlocked && isBlocked && isBlocked.id === user.id && React.createElement(\"span\", {\n    className: \"not-friend\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125\n    },\n    __self: this\n  }, \"You can no longer send message in this chat!\"));\n};\n\nexport default NotFriend;","map":{"version":3,"sources":["/home/yamakasi/React/react_chat_socketio/src/components/friends/NotFriend.jsx"],"names":["React","useEffect","useState","Button","styled","useAppHooks","api","socketEmit","socketOn","NotFriendStyle","div","NotFriend","contact","useAuth","socket","user","_","isFriend","setIsFriend","isRequest","setIsRequest","hasBlocked","setHasBlock","isBlocked","setIsBlock","unblockContact","alert","blockContact","acceptContact","friend","id","status","request"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport { Button } from 'semantic-ui-react'\nimport styled from 'styled-components'\nimport { useAppHooks } from '../../contexts';\nimport api from '../../api';\nimport { socketEmit, socketOn } from '../../socket';\n\nconst NotFriendStyle = styled.div`\n    text-align: center;\n    background-color: transparent;\n    color: black;\n    position: absolute;\n    padding: 5px 0px;\n    width: 100%;\n    height: auto;\n    bottom: 80px;\n    left: 50%;\n    transform: translate3d(-50%, 0, 0);\n\n    & .blocked-request {\n        margin-left: 10px;\n        text-transform: uppercase;\n        // border-radius: 4px;\n        box-shadow: 2px 2px 4px rgba(0, 0, 0, .4);\n    }\n`\n\nconst NotFriend = ({ contact }) => {\n    const { useAuth, socket } = useAppHooks()\n    const [{user}, _] = useAuth\n\n    const [isFriend, setIsFriend] = useState(null)\n    const [isRequest, setIsRequest] = useState(null)\n    const [hasBlocked, setHasBlock] = useState(null)\n    const [isBlocked, setIsBlock] = useState(null)\n\n    const unblockContact = () => {\n        alert('contact blocked')\n        socketEmit('check-is-blocked', socket, contact)\n        socketEmit('check-has-blocked', socket, contact)\n    }\n\n    const blockContact = () => {\n        alert('contact blocked')\n        socketEmit('check-is-blocked', socket, contact)\n        socketEmit('check-has-blocked', socket, contact)\n    }\n    \n    const acceptContact = () => {\n        alert('friend\\'s request accepted')\n        socketEmit('check-friend', socket, contact)\n        socketEmit('check-request', socket, contact)\n    }\n\n    socketOn('check-friend-response', socket, contact, ({friend}, contact) => {\n        if (friend.id === contact.id) {\n            setIsFriend(friend.status)\n        }\n    })\n    socketOn('check-request-response', socket, contact, ({request}, contact) => {\n        if (request.id === contact.id) {\n            setIsRequest(request.status)\n        }\n    })\n    socketOn('check-is-blocked-response', socket, user, ({isBlocked}, user) => {\n        if (isBlocked.id === user.id) {\n            setIsBlock(isBlocked.status)\n        }\n    })\n    socketOn('check-has-blocked-response', socket, contact, ({hasBlocked}, contact) => {\n        if (hasBlocked.id === contact.id) {\n            setHasBlock(hasBlocked.status)\n        }\n    })\n\n    useEffect(() => {\n        socketEmit('check-friend', socket, contact)\n        socketEmit('check-request', socket, contact)\n        socketEmit('check-is-blocked', socket, contact)\n        socketEmit('check-has-blocked', socket, contact)\n        /* const checkFriend = async () => {\n            const res = await api.user.getFriendList(user.id)\n            const friends = res.data\n            if (friends.length > 0) {\n                let match = friends.find(friend => friend.id === contact.id)\n                if (match) {\n                    setIsFriend(match)\n                }\n                else {\n                    setIsFriend(null)\n                }\n            }\n        }\n\n        checkFriend() */\n    }, [])\n\n    return (\n        <NotFriendStyle>\n            {\n                !isFriend && !isRequest && !hasBlocked && !isBlocked &&\n                <span className='not-friend'>\n                    This contact is not among your friends. Do you want to block him?\n                    <Button className='blocked-request' onClick={blockContact} content={<b>Yes</b>} />\n                </span>\n            }\n            {\n                !isFriend && isRequest && !hasBlocked && !isBlocked && isRequest.id === contact.id &&\n                <span className='not-friend'>\n                    This contact sent you a friend's request. What do you want to do?\n                    <Button className='blocked-request' onClick={acceptContact} content={<b>Accept</b>} />\n                    <span className='or'>Or</span>\n                    <Button className='blocked-request' onClick={blockContact} content={<b>Block</b>} />\n                </span>\n            }\n            {\n                !isFriend && !isRequest && hasBlocked && isBlocked && hasBlocked.id === contact.id &&\n                <span className='not-friend'>\n                    This contact has been blocked. You Do you want to unblock him?\n                    <Button className='blocked-request' onClick={unblockContact} content={<b>Yes</b>} />\n                </span>\n            }\n            {\n                !isFriend && !isRequest && hasBlocked && isBlocked && isBlocked.id === user.id &&\n                <span className='not-friend'>\n                    You can no longer send message in this chat!\n                </span>\n            }\n        </NotFriendStyle>\n    )\n}\n\nexport default NotFriend\n"]},"metadata":{},"sourceType":"module"}
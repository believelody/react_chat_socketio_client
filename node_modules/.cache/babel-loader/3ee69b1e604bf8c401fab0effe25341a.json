{"ast":null,"code":"import _slicedToArray from \"/home/yamakasi/React/react_chat_socketio/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _taggedTemplateLiteral from \"/home/yamakasi/React/react_chat_socketio/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/home/yamakasi/React/react_chat_socketio/src/components/messages/MessageList.jsx\";\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  margin: 50px 0px 140px;\\n  padding: 10px 10px 10px;\\n  display: flex;\\n  list-style: none;\\n  flex-direction: column-reverse;\\n  height: calc(100vh - 130px);\\n  width: 100%;\\n  position: relative;\\n  bottom: 0;\\n  scroll-behavior: smooth;\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { useState } from \"react\";\nimport styled from \"styled-components\";\nimport MessageItem from \"./MessageItem\";\nimport { useAppHooks } from \"../../contexts\";\nimport { socketOn } from \"../../socket\";\nvar MessageListStyle = styled.ul(_templateObject());\n\nvar MessageList = function MessageList(_ref) {\n  var chat = _ref.chat;\n\n  var _useAppHooks = useAppHooks(),\n      useAuth = _useAppHooks.useAuth,\n      socket = _useAppHooks.socket;\n\n  var _useAuth = _slicedToArray(useAuth, 2),\n      user = _useAuth[0].user,\n      _ = _useAuth[1];\n\n  var messagesRef = React.useRef();\n  var contact = users.find(function (u) {\n    return u.name !== user.name;\n  });\n\n  var _useState = useState(chat.messages),\n      _useState2 = _slicedToArray(_useState, 2),\n      messages = _useState2[0],\n      setMessages = _useState2[1];\n\n  var _useState3 = useState(chat.users),\n      _useState4 = _slicedToArray(_useState3, 2),\n      users = _useState4[0],\n      setUsers = _useState4[1];\n\n  socketOn('fetch-message', socket, messages, function (data, messages) {\n    if (data.chatId === chat.id && messages.length !== data.messages.length) {\n      setMessages(data.messages);\n    }\n  });\n  return React.createElement(MessageListStyle, {\n    ref: messagesRef,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, messages.length > 0 && messages.reverse().map(function (message, i) {\n    return React.createElement(MessageItem, {\n      key: i,\n      contact: contact,\n      message: message,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    });\n  }));\n};\n\nexport default MessageList;","map":{"version":3,"sources":["/home/yamakasi/React/react_chat_socketio/src/components/messages/MessageList.jsx"],"names":["React","useState","styled","MessageItem","useAppHooks","socketOn","MessageListStyle","ul","MessageList","chat","useAuth","socket","user","_","messagesRef","useRef","contact","users","find","u","name","messages","setMessages","setUsers","data","chatId","id","length","reverse","map","message","i"],"mappings":";;;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,SAASC,WAAT,QAA4B,gBAA5B;AACA,SAASC,QAAT,QAAyB,cAAzB;AAEA,IAAMC,gBAAgB,GAAGJ,MAAM,CAACK,EAAV,mBAAtB;;AAaA,IAAMC,WAAW,GAAG,SAAdA,WAAc,OAAc;AAAA,MAAXC,IAAW,QAAXA,IAAW;;AAAA,qBACJL,WAAW,EADP;AAAA,MACxBM,OADwB,gBACxBA,OADwB;AAAA,MACfC,MADe,gBACfA,MADe;;AAAA,gCAEbD,OAFa;AAAA,MAExBE,IAFwB,eAExBA,IAFwB;AAAA,MAElBC,CAFkB;;AAGhC,MAAMC,WAAW,GAAGd,KAAK,CAACe,MAAN,EAApB;AAEA,MAAMC,OAAO,GAAGC,KAAK,CAACC,IAAN,CAAW,UAAAC,CAAC;AAAA,WAAIA,CAAC,CAACC,IAAF,KAAWR,IAAI,CAACQ,IAApB;AAAA,GAAZ,CAAhB;;AALgC,kBAOAnB,QAAQ,CAACQ,IAAI,CAACY,QAAN,CAPR;AAAA;AAAA,MAOzBA,QAPyB;AAAA,MAOfC,WAPe;;AAAA,mBAQNrB,QAAQ,CAACQ,IAAI,CAACQ,KAAN,CARF;AAAA;AAAA,MAQzBA,KARyB;AAAA,MAQlBM,QARkB;;AAUhClB,EAAAA,QAAQ,CAAC,eAAD,EAAkBM,MAAlB,EAA0BU,QAA1B,EAAoC,UAACG,IAAD,EAAOH,QAAP,EAAoB;AAC9D,QAAIG,IAAI,CAACC,MAAL,KAAgBhB,IAAI,CAACiB,EAArB,IAA2BL,QAAQ,CAACM,MAAT,KAAoBH,IAAI,CAACH,QAAL,CAAcM,MAAjE,EAAyE;AACvEL,MAAAA,WAAW,CAACE,IAAI,CAACH,QAAN,CAAX;AACD;AACF,GAJO,CAAR;AAMA,SACE,oBAAC,gBAAD;AAAkB,IAAA,GAAG,EAAEP,WAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGO,QAAQ,CAACM,MAAT,GAAkB,CAAlB,IACCN,QAAQ,CACLO,OADH,GAEGC,GAFH,CAEO,UAACC,OAAD,EAAUC,CAAV;AAAA,WACH,oBAAC,WAAD;AAAa,MAAA,GAAG,EAAEA,CAAlB;AAAqB,MAAA,OAAO,EAAEf,OAA9B;AAAuC,MAAA,OAAO,EAAEc,OAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADG;AAAA,GAFP,CAFJ,CADF;AAUD,CA1BD;;AA4BA,eAAetB,WAAf","sourcesContent":["import React, { useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport MessageItem from \"./MessageItem\";\r\nimport { useAppHooks } from \"../../contexts\";\r\nimport { socketOn } from \"../../socket\";\r\n\r\nconst MessageListStyle = styled.ul`\r\n  margin: 50px 0px 140px;\r\n  padding: 10px 10px 10px;\r\n  display: flex;\r\n  list-style: none;\r\n  flex-direction: column-reverse;\r\n  height: calc(100vh - 130px);\r\n  width: 100%;\r\n  position: relative;\r\n  bottom: 0;\r\n  scroll-behavior: smooth;\r\n`;\r\n\r\nconst MessageList = ({ chat }) => {\r\n  const { useAuth, socket } = useAppHooks()\r\n  const [{user},_] = useAuth\r\n  const messagesRef = React.useRef();\r\n\r\n  const contact = users.find(u => u.name !== user.name);\r\n\r\n  const [messages, setMessages] = useState(chat.messages)\r\n  const [users, setUsers] = useState(chat.users)\r\n\r\n  socketOn('fetch-message', socket, messages, (data, messages) => {\r\n    if (data.chatId === chat.id && messages.length !== data.messages.length) {\r\n      setMessages(data.messages)\r\n    }\r\n  })\r\n\r\n  return (\r\n    <MessageListStyle ref={messagesRef}>\r\n      {messages.length > 0 &&\r\n        messages\r\n          .reverse()\r\n          .map((message, i) => (\r\n            <MessageItem key={i} contact={contact} message={message} />\r\n          ))}\r\n    </MessageListStyle>\r\n  );\r\n};\r\n\r\nexport default MessageList;\r\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import _regeneratorRuntime from \"/home/yamakasi/React/react_chat_socketio/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/yamakasi/React/react_chat_socketio/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"/home/yamakasi/React/react_chat_socketio/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _taggedTemplateLiteral from \"/home/yamakasi/React/react_chat_socketio/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/home/yamakasi/React/react_chat_socketio/src/components/users/User.jsx\";\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  margin: 0;\\n  padding: 4px 0;\\n  cursor: pointer;\\n  width: auto;\\n  height: 40px;\\n  color: black;\\n  display: flex;\\n  align-items: center;\\n  transition: all 300ms ease-in;\\n\\n  &:hover {\\n    background-color: #32465a;\\n    padding-left: 16px;\\n    border-right: 0.6em solid white;\\n    color: white;\\n  }\\n\\n  & .contact-name {\\n    font-size: 1.5em;\\n    letter-spacing: 4px;\\n  }\\n\\n  & .contact-actions {\\n    margin-left: auto;\\n    margin-right: 8px;\\n\\n    & > .contact-actions-chat {\\n      background-color: #FFA500;\\n    }\\n\\n    & > .contact-actions-request {\\n      background-color: \", \";\\n        cursor: pointer;\\n        text-shadow: 2px 2px 4px rgba(0, 0, 0, .6);\\n        box-shadow: 2px 2px 4px rgba(0, 0, 0, .6);\\n        margin: 0px 4px;\\n    }\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\nimport { useAppHooks } from \"../../contexts\";\nimport { CHAT_SELECTED } from \"../../reducers/transitionReducer\";\nimport isMobile from \"../../utils/isMobile\";\nimport api from \"../../api\";\nimport OpenChatIcon from \"../icons/OpenChatIcon\";\nimport FriendRequestIcon from \"../icons/FriendRequestIcon\";\nimport { CLOSE_MODAL } from \"../../reducers/modalReducer\";\nvar UserStyle = styled.li(_templateObject(), function (props) {\n  return props.cancel ? 'indianred' : '#8FBC8F';\n});\n\nvar User = function User(_ref) {\n  var contact = _ref.contact;\n\n  var _useAppHooks = useAppHooks(),\n      useAuth = _useAppHooks.useAuth,\n      useTransition = _useAppHooks.useTransition,\n      useModal = _useAppHooks.useModal,\n      history = _useAppHooks.history,\n      socket = _useAppHooks.socket;\n\n  var _useAuth = _slicedToArray(useAuth, 2),\n      user = _useAuth[0].user,\n      dispatchAuth = _useAuth[1];\n\n  var _useTransition = _slicedToArray(useTransition, 2),\n      transition = _useTransition[0],\n      dispatchTransition = _useTransition[1];\n\n  var _useModal = _slicedToArray(useModal, 2),\n      modal = _useModal[0],\n      dispatchModal = _useModal[1];\n\n  var _useState = useState(contact.requests),\n      _useState2 = _slicedToArray(_useState, 2),\n      requests = _useState2[0],\n      setRequests = _useState2[1];\n\n  var _useState3 = useState(contact.requests.find(function (request) {\n    return request.requesterId === user.id;\n  })),\n      _useState4 = _slicedToArray(_useState3, 2),\n      cancel = _useState4[0],\n      setCancel = _useState4[1];\n\n  var closeModal = function closeModal() {\n    return dispatchModal({\n      type: CLOSE_MODAL\n    });\n  };\n\n  var confirmAction = function confirmAction() {\n    socket.on('request-confirm', function (data) {\n      alert(data.msg);\n      setRequests(data.requests);\n    });\n  };\n\n  var openChat =\n  /*#__PURE__*/\n  function () {\n    var _ref2 = _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee() {\n      var res;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              _context.next = 3;\n              return api.chat.searchChatByUsers([contact.name, user.name]);\n\n            case 3:\n              res = _context.sent;\n\n              if (res.data) {\n                _context.next = 8;\n                break;\n              }\n\n              _context.next = 7;\n              return api.chat.createChat([contact.name, user.name]);\n\n            case 7:\n              res = _context.sent;\n\n            case 8:\n              closeModal();\n              history.push(\"/chats/\".concat(res.data.chatId));\n              if (isMobile) dispatchTransition({\n                type: CHAT_SELECTED,\n                payload: true\n              });\n              _context.next = 16;\n              break;\n\n            case 13:\n              _context.prev = 13;\n              _context.t0 = _context[\"catch\"](0);\n              console.log(_context.t0);\n\n            case 16:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[0, 13]]);\n    }));\n\n    return function openChat() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  var sendFriendRequest =\n  /*#__PURE__*/\n  function () {\n    var _ref3 = _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee2() {\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              socket.emit(\"new-request\", {\n                contactId: contact.id,\n                userId: user.id\n              });\n              confirmAction(); // try {\n              //   let res = await api.user.requestFriend(contact.id, user.id);\n              //   if (res.data) {\n              //     // alert(res.data.msg)\n              //     setRequests(res.data.requests)\n              //   }\n              //   // setCancel(true)\n              // if (isMobile) dispatchTransition({ type: CHAT_SELECTED, payload: true });\n              // } catch (error) {\n              //   console.log(error);\n              // }\n\n            case 2:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n\n    return function sendFriendRequest() {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n\n  var cancelFriendRequest =\n  /*#__PURE__*/\n  function () {\n    var _ref4 = _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee3() {\n      return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              socket.emit(\"cancel-request\", {\n                contactId: contact.id,\n                userId: user.id\n              });\n              confirmAction(); // try {\n              //   let res = await api.user.cancelFriendRequest(contact.id, user.id);\n              //   if (res.data) {\n              //     // alert(res.data.msg)\n              //     setRequests(res.data.requests)\n              //   }\n              //   // setCancel(false)\n              // if (isMobile) dispatchTransition({ type: CHAT_SELECTED, payload: true });\n              // } catch (error) {\n              //   console.log(error.response.data);\n              // }\n\n            case 2:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3);\n    }));\n\n    return function cancelFriendRequest() {\n      return _ref4.apply(this, arguments);\n    };\n  }();\n\n  var handleClick = function handleClick() {\n    if (cancel) {\n      cancelFriendRequest();\n    } else {\n      sendFriendRequest();\n    }\n  };\n\n  useEffect(function () {\n    setCancel(requests.find(function (r) {\n      return r.requesterId === user.id;\n    }));\n  }, [requests, user.id]);\n  return React.createElement(UserStyle, {\n    cancel: cancel,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    className: \"contact-name\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131\n    },\n    __self: this\n  }, contact.name), React.createElement(\"span\", {\n    className: \"contact-actions\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132\n    },\n    __self: this\n  }, React.createElement(OpenChatIcon, {\n    className: \"contact-actions-chat\",\n    handleClick: openChat,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133\n    },\n    __self: this\n  }), React.createElement(FriendRequestIcon, {\n    className: \"contact-actions-request\",\n    cancel: cancel,\n    handleClick: handleClick,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134\n    },\n    __self: this\n  })));\n};\n\nexport default User;","map":{"version":3,"sources":["/home/yamakasi/React/react_chat_socketio/src/components/users/User.jsx"],"names":["React","useEffect","useState","styled","useAppHooks","CHAT_SELECTED","isMobile","api","OpenChatIcon","FriendRequestIcon","CLOSE_MODAL","UserStyle","li","props","cancel","User","contact","useAuth","useTransition","useModal","history","socket","user","dispatchAuth","transition","dispatchTransition","modal","dispatchModal","requests","setRequests","find","request","requesterId","id","setCancel","closeModal","type","confirmAction","on","data","alert","msg","openChat","chat","searchChatByUsers","name","res","createChat","push","chatId","payload","console","log","sendFriendRequest","emit","contactId","userId","cancelFriendRequest","handleClick","r"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\nimport { useAppHooks } from \"../../contexts\";\nimport { CHAT_SELECTED } from \"../../reducers/transitionReducer\";\nimport isMobile from \"../../utils/isMobile\";\nimport api from \"../../api\";\nimport OpenChatIcon from \"../icons/OpenChatIcon\";\nimport FriendRequestIcon from \"../icons/FriendRequestIcon\";\nimport { CLOSE_MODAL } from \"../../reducers/modalReducer\";\n\nconst UserStyle = styled.li`\n  margin: 0;\n  padding: 4px 0;\n  cursor: pointer;\n  width: auto;\n  height: 40px;\n  color: black;\n  display: flex;\n  align-items: center;\n  transition: all 300ms ease-in;\n\n  &:hover {\n    background-color: #32465a;\n    padding-left: 16px;\n    border-right: 0.6em solid white;\n    color: white;\n  }\n\n  & .contact-name {\n    font-size: 1.5em;\n    letter-spacing: 4px;\n  }\n\n  & .contact-actions {\n    margin-left: auto;\n    margin-right: 8px;\n\n    & > .contact-actions-chat {\n      background-color: #FFA500;\n    }\n\n    & > .contact-actions-request {\n      background-color: ${props => props.cancel ? 'indianred' : '#8FBC8F'};\n        cursor: pointer;\n        text-shadow: 2px 2px 4px rgba(0, 0, 0, .6);\n        box-shadow: 2px 2px 4px rgba(0, 0, 0, .6);\n        margin: 0px 4px;\n    }\n  }\n`;\n\nconst User = ({ contact }) => {\n  const { useAuth, useTransition, useModal, history, socket } = useAppHooks();\n  const [{ user }, dispatchAuth] = useAuth;\n  const [transition, dispatchTransition] = useTransition;\n  const [modal, dispatchModal] = useModal;\n\n  const [requests, setRequests] = useState(contact.requests)\n  const [cancel, setCancel] = useState(contact.requests.find(request => request.requesterId === user.id))\n\n  const closeModal = () => dispatchModal({ type: CLOSE_MODAL });\n\n  const confirmAction = () => {\n    socket.on('request-confirm', data => {\n      alert(data.msg)\n      setRequests(data.requests)\n    })\n  }\n\n  const openChat = async () => {\n    try {\n      let res = await api.chat.searchChatByUsers([contact.name, user.name]);\n      if (!res.data) {\n        res = await api.chat.createChat([contact.name, user.name])\n      }\n      closeModal();\n      history.push(`/chats/${res.data.chatId}`);\n      if (isMobile) dispatchTransition({ type: CHAT_SELECTED, payload: true });\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const sendFriendRequest = async () => {\n    socket.emit(\"new-request\", { contactId: contact.id, userId: user.id });\n    confirmAction()\n    // try {\n    //   let res = await api.user.requestFriend(contact.id, user.id);\n    //   if (res.data) {\n    //     // alert(res.data.msg)\n    //     setRequests(res.data.requests)\n    //   }\n    //   // setCancel(true)\n    // if (isMobile) dispatchTransition({ type: CHAT_SELECTED, payload: true });\n    // } catch (error) {\n    //   console.log(error);\n    // }\n  };\n\n  const cancelFriendRequest = async () => {\n    socket.emit(\"cancel-request\", { contactId: contact.id, userId: user.id});\n    confirmAction()\n    // try {\n    //   let res = await api.user.cancelFriendRequest(contact.id, user.id);\n    //   if (res.data) {\n    //     // alert(res.data.msg)\n    //     setRequests(res.data.requests)\n    //   }\n    //   // setCancel(false)\n    // if (isMobile) dispatchTransition({ type: CHAT_SELECTED, payload: true });\n    // } catch (error) {\n    //   console.log(error.response.data);\n    // }\n  };\n\n  const handleClick = () => {\n    if (cancel) {\n      cancelFriendRequest()\n    }\n    else {\n      sendFriendRequest()\n    }\n  }\n\n  useEffect(() => {\n    setCancel(requests.find(r => r.requesterId === user.id))\n  }, [requests, user.id])\n\n  return (\n    <UserStyle cancel={cancel}>\n      <span className=\"contact-name\">{contact.name}</span>\n      <span className=\"contact-actions\">\n        <OpenChatIcon className='contact-actions-chat' handleClick={openChat} />\n        <FriendRequestIcon\n          className='contact-actions-request'\n          cancel={cancel}\n          handleClick={handleClick} \n        />\n      </span>\n    </UserStyle>\n  );\n};\n\nexport default User;\n"]},"metadata":{},"sourceType":"module"}
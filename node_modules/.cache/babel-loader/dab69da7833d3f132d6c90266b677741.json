{"ast":null,"code":"import _slicedToArray from \"/home/yamakasi/React/react_chat_socketio/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectWithoutProperties from \"/home/yamakasi/React/react_chat_socketio/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _jsxFileName = \"/home/yamakasi/React/react_chat_socketio/src/components/auth-routes/AuthRoute.jsx\";\nimport React from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport jwt from \"jsonwebtoken\";\nimport { useAppHooks } from \"../../contexts\";\nimport { SET_CURRENT_PROFILE, DISCONNECT } from \"../../reducers/authReducer\";\nimport setAuth from \"../../utils/setAuth\";\nvar secret = process.env.REACT_APP_SECRET || process.env.REACT_APP_SECRET_DEV;\n\nvar AuthRoute = function AuthRoute(_ref) {\n  var Component = _ref.component,\n      rest = _objectWithoutProperties(_ref, [\"component\"]);\n\n  var _useAppHooks = useAppHooks(),\n      useAuth = _useAppHooks.useAuth,\n      socket = _useAppHooks.socket;\n\n  var _useAuth = _slicedToArray(useAuth, 2),\n      _useAuth$ = _useAuth[0],\n      isConnected = _useAuth$.isConnected,\n      user = _useAuth$.user,\n      dispatch = _useAuth[1];\n\n  var _React$useState = React.useState(true),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      isLoaded = _React$useState2[0],\n      setLoading = _React$useState2[1];\n\n  React.useEffect(function () {\n    if (localStorage.chat_token && !isConnected) {\n      setAuth(localStorage.chat_token);\n      var decoded = jwt.verify(localStorage.chat_token, secret);\n      var currentTime = Date.now() / 1000;\n\n      if (decoded.exp < currentTime) {\n        dispatch({\n          type: DISCONNECT\n        });\n      } else {\n        dispatch({\n          type: SET_CURRENT_PROFILE,\n          payload: decoded\n        });\n      }\n    }\n\n    setLoading(false);\n  }, [dispatch, isConnected]);\n  React.useEffect(function () {\n    if (isConnected) {\n      socket.emit(\"user-emit\", {\n        userId: user.id,\n        socketId: socket.id\n      });\n    }\n\n    setLoading(false);\n  }, [isConnected, socket, user]);\n  return React.createElement(Route, Object.assign({}, rest, {\n    render: function render(props) {\n      return React.createElement(React.Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }, isLoaded && React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }, \"Loading...\"), !isLoaded && isConnected && React.createElement(Component, Object.assign({}, props, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      })), !isLoaded && !isConnected && React.createElement(Redirect, {\n        to: \"/login\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }));\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }));\n};\n\nexport default AuthRoute;","map":{"version":3,"sources":["/home/yamakasi/React/react_chat_socketio/src/components/auth-routes/AuthRoute.jsx"],"names":["React","Route","Redirect","jwt","useAppHooks","SET_CURRENT_PROFILE","DISCONNECT","setAuth","secret","process","env","REACT_APP_SECRET","REACT_APP_SECRET_DEV","AuthRoute","Component","component","rest","useAuth","socket","isConnected","user","dispatch","useState","isLoaded","setLoading","useEffect","localStorage","chat_token","decoded","verify","currentTime","Date","now","exp","type","payload","emit","userId","id","socketId","props"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,EAAgBC,QAAhB,QAAgC,kBAAhC;AACA,OAAOC,GAAP,MAAgB,cAAhB;AACA,SAASC,WAAT,QAA4B,gBAA5B;AACA,SAASC,mBAAT,EAA8BC,UAA9B,QAAgD,4BAAhD;AACA,OAAOC,OAAP,MAAoB,qBAApB;AAEA,IAAMC,MAAM,GAAGC,OAAO,CAACC,GAAR,CAAYC,gBAAZ,IAAgCF,OAAO,CAACC,GAAR,CAAYE,oBAA3D;;AAEA,IAAMC,SAAS,GAAG,SAAZA,SAAY,OAAuC;AAAA,MAAzBC,SAAyB,QAApCC,SAAoC;AAAA,MAAXC,IAAW;;AAAA,qBAC3BZ,WAAW,EADgB;AAAA,MAC/Ca,OAD+C,gBAC/CA,OAD+C;AAAA,MACtCC,MADsC,gBACtCA,MADsC;;AAAA,gCAEbD,OAFa;AAAA;AAAA,MAE9CE,WAF8C,aAE9CA,WAF8C;AAAA,MAEjCC,IAFiC,aAEjCA,IAFiC;AAAA,MAEzBC,QAFyB;;AAAA,wBAIxBrB,KAAK,CAACsB,QAAN,CAAe,IAAf,CAJwB;AAAA;AAAA,MAIhDC,QAJgD;AAAA,MAItCC,UAJsC;;AAMvDxB,EAAAA,KAAK,CAACyB,SAAN,CAAgB,YAAM;AACpB,QAAIC,YAAY,CAACC,UAAb,IAA2B,CAACR,WAAhC,EAA6C;AAC3CZ,MAAAA,OAAO,CAACmB,YAAY,CAACC,UAAd,CAAP;AACA,UAAMC,OAAO,GAAGzB,GAAG,CAAC0B,MAAJ,CAAWH,YAAY,CAACC,UAAxB,EAAoCnB,MAApC,CAAhB;AACA,UAAMsB,WAAW,GAAGC,IAAI,CAACC,GAAL,KAAa,IAAjC;;AACA,UAAIJ,OAAO,CAACK,GAAR,GAAcH,WAAlB,EAA+B;AAC7BT,QAAAA,QAAQ,CAAC;AAAEa,UAAAA,IAAI,EAAE5B;AAAR,SAAD,CAAR;AACD,OAFD,MAEO;AACLe,QAAAA,QAAQ,CAAC;AAAEa,UAAAA,IAAI,EAAE7B,mBAAR;AAA6B8B,UAAAA,OAAO,EAAEP;AAAtC,SAAD,CAAR;AACD;AACF;;AACDJ,IAAAA,UAAU,CAAC,KAAD,CAAV;AACD,GAZD,EAYG,CAACH,QAAD,EAAWF,WAAX,CAZH;AAcAnB,EAAAA,KAAK,CAACyB,SAAN,CAAgB,YAAM;AACpB,QAAIN,WAAJ,EAAiB;AACfD,MAAAA,MAAM,CAACkB,IAAP,CAAY,WAAZ,EAAyB;AAAEC,QAAAA,MAAM,EAAEjB,IAAI,CAACkB,EAAf;AAAmBC,QAAAA,QAAQ,EAAErB,MAAM,CAACoB;AAApC,OAAzB;AACD;;AACDd,IAAAA,UAAU,CAAC,KAAD,CAAV;AACD,GALD,EAKG,CAACL,WAAD,EAAcD,MAAd,EAAsBE,IAAtB,CALH;AAOA,SACE,oBAAC,KAAD,oBACMJ,IADN;AAEE,IAAA,MAAM,EAAE,gBAAAwB,KAAK;AAAA,aACX,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGjB,QAAQ,IAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADf,EAEG,CAACA,QAAD,IAAaJ,WAAb,IAA4B,oBAAC,SAAD,oBAAeqB,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAF/B,EAGG,CAACjB,QAAD,IAAa,CAACJ,WAAd,IAA6B,oBAAC,QAAD;AAAU,QAAA,EAAE,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAHhC,CADW;AAAA,KAFf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADF;AAYD,CAvCD;;AAyCA,eAAeN,SAAf","sourcesContent":["import React from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\nimport jwt from \"jsonwebtoken\";\r\nimport { useAppHooks } from \"../../contexts\";\r\nimport { SET_CURRENT_PROFILE, DISCONNECT } from \"../../reducers/authReducer\";\r\nimport setAuth from \"../../utils/setAuth\";\r\n\r\nconst secret = process.env.REACT_APP_SECRET || process.env.REACT_APP_SECRET_DEV;\r\n\r\nconst AuthRoute = ({ component: Component, ...rest }) => {\r\n  const { useAuth, socket } = useAppHooks();\r\n  const [{ isConnected, user }, dispatch] = useAuth;\r\n\r\n  const [isLoaded, setLoading] = React.useState(true);\r\n\r\n  React.useEffect(() => {\r\n    if (localStorage.chat_token && !isConnected) {\r\n      setAuth(localStorage.chat_token);\r\n      const decoded = jwt.verify(localStorage.chat_token, secret);\r\n      const currentTime = Date.now() / 1000;\r\n      if (decoded.exp < currentTime) {\r\n        dispatch({ type: DISCONNECT });\r\n      } else {\r\n        dispatch({ type: SET_CURRENT_PROFILE, payload: decoded });\r\n      }\r\n    }\r\n    setLoading(false);\r\n  }, [dispatch, isConnected]);\r\n\r\n  React.useEffect(() => {\r\n    if (isConnected) {\r\n      socket.emit(\"user-emit\", { userId: user.id, socketId: socket.id });\r\n    }\r\n    setLoading(false);\r\n  }, [isConnected, socket, user]);\r\n\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={props => (\r\n        <React.Fragment>\r\n          {isLoaded && <div>Loading...</div>}\r\n          {!isLoaded && isConnected && <Component {...props} />}\r\n          {!isLoaded && !isConnected && <Redirect to=\"/login\" />}\r\n        </React.Fragment>\r\n      )}\r\n    />\r\n  );\r\n};\r\n\r\nexport default AuthRoute;\r\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import _slicedToArray from \"/home/yamakasi/React/react_chat_socketio/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _taggedTemplateLiteral from \"/home/yamakasi/React/react_chat_socketio/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/home/yamakasi/React/react_chat_socketio/src/components/messages/MessageList.jsx\";\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteral([\"\\n  width: 100%;\\n  height: 50px;\\n  color: black;\\n  // background-color: rgba(255, 255, 255, .4);\\n  text-align: center;\\n  line-height: 50px;\\n  font-size: 1.7em;\\n\"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  margin: 50px 0px 140px;\\n  padding: 10px 10px 50px;\\n  display: block;\\n  list-style: none;\\n  height: calc(100vh - 130px);\\n  width: 100%;\\n  position: relative;\\n  bottom: 0;\\n  overflow-y: scroll;\\n  // scroll-behavior: smooth;\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport MessageItem from \"./MessageItem\";\nimport { useAppHooks } from \"../../contexts\";\nimport { socketOn } from \"../../socket\";\nimport Moment from \"react-moment\";\nvar MessageListStyle = styled.ul(_templateObject());\nvar MessageDate = styled.div(_templateObject2());\n\nvar MessageSortedByDate = function MessageSortedByDate(_ref) {\n  var messages = _ref.messages,\n      contact = _ref.contact;\n  var dates = [];\n\n  var day = function day(date) {\n    return new Date(date).getDate();\n  };\n\n  var month = function month(date) {\n    return new Date(date).getMonth();\n  };\n\n  var year = function year(date) {\n    return new Date(date).getFullYear();\n  };\n\n  for (var i = 0; i < messages.length; i++) {\n    if (i > 0) {\n      if (day(messages[i].createdAt) !== day(messages[i - 1].createdAt) || month(messages[i].createdAt) !== month(messages[i - 1].createdAt) || year(messages[i].createdAt) !== year(messages[i - 1].createdAt)) {\n        console.log(i);\n        dates.push(messages[i].createdAt);\n      }\n    } else {\n      dates.push(messages[i].createdAt);\n    }\n  }\n  /* dates = messages.reduce(function(m, d, i) {\r\n    if (i > 0 ) {\r\n      console.log(day(m))\r\n      // console.log(day(m[i - 1]))\r\n      // console.log(day(d.createdAt) !== day(m[i - 1]))\r\n      if (m[i - 1] && d && day(d.createdAt) !== day(m[i - 1]) || month(d.createdAt) !== month(m[i - 1]) || year(d.createdAt) !== year(m[i - 1])) {\r\n        m.push(d.createdAt)\r\n      }\r\n      else return\r\n    }\r\n    else {\r\n      m.push(d.createdAt)\r\n    }\r\n    return m\r\n  }, []) */\n\n\n  console.log(dates.length);\n  return dates.map(function (date) {\n    return React.createElement(React.Fragment, {\n      key: date,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, React.createElement(MessageDate, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, React.createElement(Moment, {\n      format: \"D MMM YYYY\",\n      date: date,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    })), messages.filter(function (message) {\n      return day(date) === day(message.createdAt) || month(date) === month(message.createdAt) || year(date) === year(message.createdAt);\n    }).map(function (message) {\n      return React.createElement(MessageItem, {\n        key: message.id,\n        contact: contact,\n        message: message,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      });\n    }));\n  });\n};\n\nvar MessageList = function MessageList(_ref2) {\n  var chat = _ref2.chat;\n\n  var _useAppHooks = useAppHooks(),\n      useAuth = _useAppHooks.useAuth,\n      socket = _useAppHooks.socket;\n\n  var _useAuth = _slicedToArray(useAuth, 2),\n      user = _useAuth[0].user,\n      _ = _useAuth[1];\n\n  var messagesRef = React.useRef();\n\n  var _useState = useState(chat.messages),\n      _useState2 = _slicedToArray(_useState, 2),\n      messages = _useState2[0],\n      setMessages = _useState2[1];\n\n  var _useState3 = useState(chat.users),\n      _useState4 = _slicedToArray(_useState3, 2),\n      users = _useState4[0],\n      setUsers = _useState4[1];\n\n  var contact = users.find(function (u) {\n    return u.name !== user.name;\n  });\n  socketOn('fetch-messages', socket, messages, function (data, messages) {\n    if (data.chatId === chat.id && messages.length !== data.messages.length) {\n      setMessages(data.messages);\n    }\n  });\n  useEffect(function () {\n    if (messagesRef) {\n      messagesRef.current.scrollTo(0, messagesRef.current.scrollHeight);\n    }\n  }, [messages]);\n  return React.createElement(MessageListStyle, {\n    ref: messagesRef,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106\n    },\n    __self: this\n  }, messages.length > 0 && React.createElement(MessageSortedByDate, {\n    contact: contact,\n    messages: messages,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109\n    },\n    __self: this\n  }));\n};\n\nexport default MessageList;","map":{"version":3,"sources":["/home/yamakasi/React/react_chat_socketio/src/components/messages/MessageList.jsx"],"names":["React","useState","useEffect","styled","MessageItem","useAppHooks","socketOn","Moment","MessageListStyle","ul","MessageDate","div","MessageSortedByDate","messages","contact","dates","day","date","Date","getDate","month","getMonth","year","getFullYear","i","length","createdAt","console","log","push","map","filter","message","id","MessageList","chat","useAuth","socket","user","_","messagesRef","useRef","setMessages","users","setUsers","find","u","name","data","chatId","current","scrollTo","scrollHeight"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport MessageItem from \"./MessageItem\";\r\nimport { useAppHooks } from \"../../contexts\";\r\nimport { socketOn } from \"../../socket\";\r\nimport Moment from \"react-moment\";\r\n\r\nconst MessageListStyle = styled.ul`\r\n  margin: 50px 0px 140px;\r\n  padding: 10px 10px 50px;\r\n  display: block;\r\n  list-style: none;\r\n  height: calc(100vh - 130px);\r\n  width: 100%;\r\n  position: relative;\r\n  bottom: 0;\r\n  overflow-y: scroll;\r\n  // scroll-behavior: smooth;\r\n`;\r\n\r\nconst MessageDate = styled.div`\r\n  width: 100%;\r\n  height: 50px;\r\n  color: black;\r\n  // background-color: rgba(255, 255, 255, .4);\r\n  text-align: center;\r\n  line-height: 50px;\r\n  font-size: 1.7em;\r\n`\r\n\r\nconst MessageSortedByDate = ({ messages, contact }) => {\r\n  let dates = []\r\n  const day = date => new Date(date).getDate()\r\n  const month = date => new Date(date).getMonth()\r\n  const year = date => new Date(date).getFullYear()\r\n\r\n  for (let i = 0; i < messages.length; i++) {\r\n    if (i > 0) {\r\n      if (day(messages[i].createdAt) !== day(messages[i - 1].createdAt) || month(messages[i].createdAt) !== month(messages[i - 1].createdAt) || year(messages[i].createdAt) !== year(messages[i - 1].createdAt)) {\r\n        console.log(i)\r\n        dates.push(messages[i].createdAt)\r\n      }\r\n    }\r\n    else {\r\n      dates.push(messages[i].createdAt)\r\n    }\r\n  }\r\n  \r\n  /* dates = messages.reduce(function(m, d, i) {\r\n    if (i > 0 ) {\r\n      console.log(day(m))\r\n      // console.log(day(m[i - 1]))\r\n      // console.log(day(d.createdAt) !== day(m[i - 1]))\r\n      if (m[i - 1] && d && day(d.createdAt) !== day(m[i - 1]) || month(d.createdAt) !== month(m[i - 1]) || year(d.createdAt) !== year(m[i - 1])) {\r\n        m.push(d.createdAt)\r\n      }\r\n      else return\r\n    }\r\n    else {\r\n      m.push(d.createdAt)\r\n    }\r\n    return m\r\n  }, []) */\r\n\r\n  console.log(dates.length)\r\n  \r\n  return dates.map(date =>\r\n    <React.Fragment key={date}>\r\n      <MessageDate>\r\n        <Moment format=\"D MMM YYYY\" date={date} />\r\n      </MessageDate>\r\n      {\r\n        messages\r\n          .filter(message => day(date) === day(message.createdAt) || month(date) === month(message.createdAt) || year(date) === year(message.createdAt))\r\n          .map(message => (\r\n            <MessageItem key={message.id} contact={contact} message={message} />\r\n          )\r\n        )\r\n      }\r\n    </React.Fragment>\r\n  )\r\n}\r\n\r\nconst MessageList = ({ chat }) => {\r\n  const { useAuth, socket } = useAppHooks()\r\n  const [{user},_] = useAuth\r\n  const messagesRef = React.useRef();\r\n  \r\n  const [messages, setMessages] = useState(chat.messages)\r\n  const [users, setUsers] = useState(chat.users)\r\n  const contact = users.find(u => u.name !== user.name);\r\n\r\n  socketOn('fetch-messages', socket, messages, (data, messages) => {\r\n    if (data.chatId === chat.id && messages.length !== data.messages.length) {\r\n      setMessages(data.messages)\r\n    }\r\n  })\r\n\r\n  useEffect(() => {\r\n    if (messagesRef) {\r\n      messagesRef.current.scrollTo(0, messagesRef.current.scrollHeight)\r\n    }\r\n  }, [messages])\r\n\r\n  return (\r\n    <MessageListStyle ref={messagesRef}>\r\n      {\r\n        messages.length > 0 && \r\n        <MessageSortedByDate contact={contact} messages={messages} />\r\n      }\r\n    </MessageListStyle>\r\n  );\r\n};\r\n\r\nexport default MessageList;\r\n"]},"metadata":{},"sourceType":"module"}
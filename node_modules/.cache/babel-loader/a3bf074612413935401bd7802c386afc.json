{"ast":null,"code":"import _slicedToArray from \"/home/yamakasi/React/react_chat_socketio/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _taggedTemplateLiteral from \"/home/yamakasi/React/react_chat_socketio/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/home/yamakasi/React/react_chat_socketio/src/components/messages/MessageList.jsx\";\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteral([\"\\n\\n\"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  margin: 50px 0px 140px;\\n  padding: 10px 10px 50px;\\n  display: block;\\n  list-style: none;\\n  height: calc(100vh - 130px);\\n  width: 100%;\\n  position: relative;\\n  bottom: 0;\\n  overflow-y: scroll;\\n  // scroll-behavior: smooth;\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport MessageItem from \"./MessageItem\";\nimport { useAppHooks } from \"../../contexts\";\nimport { socketOn } from \"../../socket\";\nimport Moment from \"react-moment\";\nvar MessageListStyle = styled.ul(_templateObject());\nvar MessageDate = styled.div(_templateObject2());\n\nvar MessageSortedByDate = function MessageSortedByDate(_ref) {\n  var messages = _ref.messages;\n  var dates = [];\n  messages.reduce(function (m, d) {\n    console.log(m); // if (m && d !== m.createdAt) d = m.createdAt\n\n    dates.push(m.createdAt);\n  });\n  console.log(dates);\n  return null;\n};\n\nvar MessageList = function MessageList(_ref2) {\n  var chat = _ref2.chat;\n\n  var _useAppHooks = useAppHooks(),\n      useAuth = _useAppHooks.useAuth,\n      socket = _useAppHooks.socket;\n\n  var _useAuth = _slicedToArray(useAuth, 2),\n      user = _useAuth[0].user,\n      _ = _useAuth[1];\n\n  var messagesRef = React.useRef();\n\n  var _useState = useState(chat.messages),\n      _useState2 = _slicedToArray(_useState, 2),\n      messages = _useState2[0],\n      setMessages = _useState2[1];\n\n  var _useState3 = useState(chat.users),\n      _useState4 = _slicedToArray(_useState3, 2),\n      users = _useState4[0],\n      setUsers = _useState4[1];\n\n  var contact = users.find(function (u) {\n    return u.name !== user.name;\n  });\n  socketOn('fetch-messages', socket, messages, function (data, messages) {\n    if (data.chatId === chat.id && messages.length !== data.messages.length) {\n      setMessages(data.messages);\n    }\n  });\n  useEffect(function () {\n    if (messagesRef) {\n      messagesRef.current.scrollTo(0, messagesRef.current.scrollHeight);\n    }\n  }, [messages]);\n  return React.createElement(MessageListStyle, {\n    ref: messagesRef,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, messages.length > 0 && React.createElement(MessageSortedByDate, {\n    messages: messages,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }));\n};\n\nexport default MessageList;","map":{"version":3,"sources":["/home/yamakasi/React/react_chat_socketio/src/components/messages/MessageList.jsx"],"names":["React","useState","useEffect","styled","MessageItem","useAppHooks","socketOn","Moment","MessageListStyle","ul","MessageDate","div","MessageSortedByDate","messages","dates","reduce","m","d","console","log","push","createdAt","MessageList","chat","useAuth","socket","user","_","messagesRef","useRef","setMessages","users","setUsers","contact","find","u","name","data","chatId","id","length","current","scrollTo","scrollHeight"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,SAASC,WAAT,QAA4B,gBAA5B;AACA,SAASC,QAAT,QAAyB,cAAzB;AACA,OAAOC,MAAP,MAAmB,cAAnB;AAEA,IAAMC,gBAAgB,GAAGL,MAAM,CAACM,EAAV,mBAAtB;AAaA,IAAMC,WAAW,GAAGP,MAAM,CAACQ,GAAV,oBAAjB;;AAIA,IAAMC,mBAAmB,GAAG,SAAtBA,mBAAsB,OAAkB;AAAA,MAAfC,QAAe,QAAfA,QAAe;AAC5C,MAAIC,KAAK,GAAG,EAAZ;AACAD,EAAAA,QAAQ,CAACE,MAAT,CAAgB,UAACC,CAAD,EAAIC,CAAJ,EAAU;AACxBC,IAAAA,OAAO,CAACC,GAAR,CAAYH,CAAZ,EADwB,CAExB;;AACAF,IAAAA,KAAK,CAACM,IAAN,CAAWJ,CAAC,CAACK,SAAb;AACD,GAJD;AAKAH,EAAAA,OAAO,CAACC,GAAR,CAAYL,KAAZ;AACA,SAAO,IAAP;AACD,CATD;;AAWA,IAAMQ,WAAW,GAAG,SAAdA,WAAc,QAAc;AAAA,MAAXC,IAAW,SAAXA,IAAW;;AAAA,qBACJlB,WAAW,EADP;AAAA,MACxBmB,OADwB,gBACxBA,OADwB;AAAA,MACfC,MADe,gBACfA,MADe;;AAAA,gCAEbD,OAFa;AAAA,MAExBE,IAFwB,eAExBA,IAFwB;AAAA,MAElBC,CAFkB;;AAGhC,MAAMC,WAAW,GAAG5B,KAAK,CAAC6B,MAAN,EAApB;;AAHgC,kBAKA5B,QAAQ,CAACsB,IAAI,CAACV,QAAN,CALR;AAAA;AAAA,MAKzBA,QALyB;AAAA,MAKfiB,WALe;;AAAA,mBAMN7B,QAAQ,CAACsB,IAAI,CAACQ,KAAN,CANF;AAAA;AAAA,MAMzBA,KANyB;AAAA,MAMlBC,QANkB;;AAOhC,MAAMC,OAAO,GAAGF,KAAK,CAACG,IAAN,CAAW,UAAAC,CAAC;AAAA,WAAIA,CAAC,CAACC,IAAF,KAAWV,IAAI,CAACU,IAApB;AAAA,GAAZ,CAAhB;AAEA9B,EAAAA,QAAQ,CAAC,gBAAD,EAAmBmB,MAAnB,EAA2BZ,QAA3B,EAAqC,UAACwB,IAAD,EAAOxB,QAAP,EAAoB;AAC/D,QAAIwB,IAAI,CAACC,MAAL,KAAgBf,IAAI,CAACgB,EAArB,IAA2B1B,QAAQ,CAAC2B,MAAT,KAAoBH,IAAI,CAACxB,QAAL,CAAc2B,MAAjE,EAAyE;AACvEV,MAAAA,WAAW,CAACO,IAAI,CAACxB,QAAN,CAAX;AACD;AACF,GAJO,CAAR;AAMAX,EAAAA,SAAS,CAAC,YAAM;AACd,QAAI0B,WAAJ,EAAiB;AACfA,MAAAA,WAAW,CAACa,OAAZ,CAAoBC,QAApB,CAA6B,CAA7B,EAAgCd,WAAW,CAACa,OAAZ,CAAoBE,YAApD;AACD;AACF,GAJQ,EAIN,CAAC9B,QAAD,CAJM,CAAT;AAMA,SACE,oBAAC,gBAAD;AAAkB,IAAA,GAAG,EAAEe,WAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEIf,QAAQ,CAAC2B,MAAT,GAAkB,CAAlB,IACA,oBAAC,mBAAD;AAAqB,IAAA,QAAQ,EAAE3B,QAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHJ,CADF;AAQD,CA7BD;;AA+BA,eAAeS,WAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport MessageItem from \"./MessageItem\";\r\nimport { useAppHooks } from \"../../contexts\";\r\nimport { socketOn } from \"../../socket\";\r\nimport Moment from \"react-moment\";\r\n\r\nconst MessageListStyle = styled.ul`\r\n  margin: 50px 0px 140px;\r\n  padding: 10px 10px 50px;\r\n  display: block;\r\n  list-style: none;\r\n  height: calc(100vh - 130px);\r\n  width: 100%;\r\n  position: relative;\r\n  bottom: 0;\r\n  overflow-y: scroll;\r\n  // scroll-behavior: smooth;\r\n`;\r\n\r\nconst MessageDate = styled.div`\r\n\r\n`\r\n\r\nconst MessageSortedByDate = ({ messages }) => {\r\n  let dates = []\r\n  messages.reduce((m, d) => {\r\n    console.log(m)\r\n    // if (m && d !== m.createdAt) d = m.createdAt\r\n    dates.push(m.createdAt)\r\n  })\r\n  console.log(dates)\r\n  return null\r\n}\r\n\r\nconst MessageList = ({ chat }) => {\r\n  const { useAuth, socket } = useAppHooks()\r\n  const [{user},_] = useAuth\r\n  const messagesRef = React.useRef();\r\n  \r\n  const [messages, setMessages] = useState(chat.messages)\r\n  const [users, setUsers] = useState(chat.users)\r\n  const contact = users.find(u => u.name !== user.name);\r\n\r\n  socketOn('fetch-messages', socket, messages, (data, messages) => {\r\n    if (data.chatId === chat.id && messages.length !== data.messages.length) {\r\n      setMessages(data.messages)\r\n    }\r\n  })\r\n\r\n  useEffect(() => {\r\n    if (messagesRef) {\r\n      messagesRef.current.scrollTo(0, messagesRef.current.scrollHeight)\r\n    }\r\n  }, [messages])\r\n\r\n  return (\r\n    <MessageListStyle ref={messagesRef}>\r\n      {\r\n        messages.length > 0 && \r\n        <MessageSortedByDate messages={messages} />\r\n      }\r\n    </MessageListStyle>\r\n  );\r\n};\r\n\r\nexport default MessageList;\r\n"]},"metadata":{},"sourceType":"module"}
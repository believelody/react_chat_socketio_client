{"ast":null,"code":"import _slicedToArray from \"/home/yamakasi/React/react_chat_socketio/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _taggedTemplateLiteral from \"/home/yamakasi/React/react_chat_socketio/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/home/yamakasi/React/react_chat_socketio/src/components/header/ChatHeader.jsx\";\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  width: 100%;\\n  height: 50px;\\n  border-bottom: 1px solid rgba(0, 0, 0, 0.5);\\n  position: absolute;\\n  padding: 0 0 0 25px;\\n  margin: 0;\\n  top: 0;\\n  left: 0;\\n  background: #f5f5f5;\\n  display: flex;\\n  align-items: center;\\n  z-index: 1;\\n\\n  & > .go-back {\\n    display: none;\\n  }\\n\\n  & > h4 {\\n    padding: 0;\\n    margin: 0 0 0 15px;\\n  }\\n\\n  & > .img-contact {\\n    width: 40px;\\n    line-height: 30px;\\n    border-radius: 50%;\\n    height: 40px;\\n    text-align: center;\\n    font-size: 2em;\\n    background-color: white;\\n    border: 2px solid #aaa;\\n    cursor: pointer;\\n  }\\n\\n  & > .btn-option {\\n    text-align: center;\\n    position: absolute;\\n    right: 5%;\\n    top: 50%;\\n    transform: translateY(-50%);\\n    padding: 5px;\\n    margin: 0;\\n    font-size: 1.2em;\\n    border-radius: 4px;\\n    box-shadow: 2px 2px 8px rgba(0, 0, 0, 0.4);\\n    width: 40px;\\n    cursor: pointer;\\n  }\\n\\n  & .header-typing {\\n    margin-left: 30px;\\n    font-style: italic;\\n  }\\n\\n  @media \", \" {\\n    & > .go-back {\\n      display: inline-block;\\n      padding: 5px;\\n      border-radius: 4px;\\n      box-shadow: 2px 2px 8px rgba(0, 0, 0, 0.4);\\n      width: 40px;\\n      cursor: pointer;\\n    }\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { useEffect, useRef, useState } from \"react\";\nimport styled from \"styled-components\";\nimport { useAppHooks } from \"../../contexts\";\nimport { CHAT_UNSELECTED } from \"../../reducers/transitionReducer\";\nimport devices from \"../../utils/devices\";\nimport { useTransition } from \"../../contexts/transitionContext\";\nvar ChatHeaderStyle = styled.header(_templateObject(), devices.mobileL);\n\nvar ChatHeader = function ChatHeader(_ref) {\n  var getHeaderPosition = _ref.getHeaderPosition,\n      isDisplayed = _ref.isDisplayed,\n      chat = _ref.chat;\n\n  var _useAppHooks = useAppHooks(),\n      useTransition = _useAppHooks.useTransition,\n      socket = _useAppHooks.socket;\n\n  var _useTransition = _slicedToArray(useTransition, 2),\n      chatSelected = _useTransition[0],\n      dispatchTransition = _useTransition[1];\n\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      dest = _useState2[0],\n      setDest = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      isTyping = _useState4[0],\n      setTyping = _useState4[1];\n\n  var _useState5 = useState(false),\n      _useState6 = _slicedToArray(_useState5, 2),\n      isSelected = _useState6[0],\n      setSelected = _useState6[1];\n\n  var headerRef = useRef();\n\n  var handleTransition = function handleTransition(e) {\n    dispatchTransition({\n      type: CHAT_UNSELECTED,\n      payload: false\n    });\n  };\n\n  var handleClick = function handleClick(e) {\n    getHeaderPosition(!isDisplayed, headerRef.current.getBoundingClientRect().height);\n  };\n\n  socket.on(\"is-typing\", function (data) {\n    return setTyping(data);\n  });\n  useEffect(function () {\n    if (localStorage.username) {\n      setDest(chat.users.find(function (user) {\n        return user.username !== localStorage.username;\n      }));\n    }\n  }, [localStorage.username, dest, chat.users]);\n  useEffect(function () {\n    setSelected(!isSelected);\n  }, []);\n  return React.createElement(ChatHeaderStyle, {\n    ref: headerRef,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    className: \"btn-option\",\n    onClick: handleClick,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111\n    },\n    __self: this\n  }, \"+\"), React.createElement(\"span\", {\n    className: \"go-back\",\n    onClick: handleTransition,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114\n    },\n    __self: this\n  }, React.createElement(\"i\", {\n    className: \"fas fa-chevron-left\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115\n    },\n    __self: this\n  })), React.createElement(\"span\", {\n    className: \"img-contact\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117\n    },\n    __self: this\n  }, dest ? dest.username[0].toUpperCase() : null), React.createElement(\"h4\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120\n    },\n    __self: this\n  }, dest ? dest.username : null), isTyping && React.createElement(\"span\", {\n    className: \"header-typing\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121\n    },\n    __self: this\n  }, \"is typing...\"));\n};\n\nexport default ChatHeader;","map":{"version":3,"sources":["/home/yamakasi/React/react_chat_socketio/src/components/header/ChatHeader.jsx"],"names":["React","useEffect","useRef","useState","styled","useAppHooks","CHAT_UNSELECTED","devices","useTransition","ChatHeaderStyle","header","mobileL","ChatHeader","getHeaderPosition","isDisplayed","chat","socket","chatSelected","dispatchTransition","dest","setDest","isTyping","setTyping","isSelected","setSelected","headerRef","handleTransition","e","type","payload","handleClick","current","getBoundingClientRect","height","on","data","localStorage","username","users","find","user","toUpperCase"],"mappings":"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","sourcesContent":["import React, { useEffect, useRef, useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { useAppHooks } from \"../../contexts\";\r\nimport { CHAT_UNSELECTED } from \"../../reducers/transitionReducer\";\r\nimport devices from \"../../utils/devices\";\r\nimport { useTransition } from \"../../contexts/transitionContext\";\r\n\r\nconst ChatHeaderStyle = styled.header`\r\n  width: 100%;\r\n  height: 50px;\r\n  border-bottom: 1px solid rgba(0, 0, 0, 0.5);\r\n  position: absolute;\r\n  padding: 0 0 0 25px;\r\n  margin: 0;\r\n  top: 0;\r\n  left: 0;\r\n  background: #f5f5f5;\r\n  display: flex;\r\n  align-items: center;\r\n  z-index: 1;\r\n\r\n  & > .go-back {\r\n    display: none;\r\n  }\r\n\r\n  & > h4 {\r\n    padding: 0;\r\n    margin: 0 0 0 15px;\r\n  }\r\n\r\n  & > .img-contact {\r\n    width: 40px;\r\n    line-height: 30px;\r\n    border-radius: 50%;\r\n    height: 40px;\r\n    text-align: center;\r\n    font-size: 2em;\r\n    background-color: white;\r\n    border: 2px solid #aaa;\r\n    cursor: pointer;\r\n  }\r\n\r\n  & > .btn-option {\r\n    text-align: center;\r\n    position: absolute;\r\n    right: 5%;\r\n    top: 50%;\r\n    transform: translateY(-50%);\r\n    padding: 5px;\r\n    margin: 0;\r\n    font-size: 1.2em;\r\n    border-radius: 4px;\r\n    box-shadow: 2px 2px 8px rgba(0, 0, 0, 0.4);\r\n    width: 40px;\r\n    cursor: pointer;\r\n  }\r\n\r\n  & .header-typing {\r\n    margin-left: 30px;\r\n    font-style: italic;\r\n  }\r\n\r\n  @media ${devices.mobileL} {\r\n    & > .go-back {\r\n      display: inline-block;\r\n      padding: 5px;\r\n      border-radius: 4px;\r\n      box-shadow: 2px 2px 8px rgba(0, 0, 0, 0.4);\r\n      width: 40px;\r\n      cursor: pointer;\r\n    }\r\n  }\r\n`;\r\n\r\nconst ChatHeader = ({ getHeaderPosition, isDisplayed, chat }) => {\r\n  const { useTransition, socket } = useAppHooks();\r\n\r\n  const [chatSelected, dispatchTransition] = useTransition;\r\n\r\n  const [dest, setDest] = useState(null);\r\n  const [isTyping, setTyping] = useState(false);\r\n  const [isSelected, setSelected] = useState(false);\r\n\r\n  const headerRef = useRef();\r\n\r\n  const handleTransition = e => {\r\n    dispatchTransition({ type: CHAT_UNSELECTED, payload: false });\r\n  };\r\n\r\n  const handleClick = e => {\r\n    getHeaderPosition(\r\n      !isDisplayed,\r\n      headerRef.current.getBoundingClientRect().height\r\n    );\r\n  };\r\n\r\n  socket.on(\"is-typing\", data => setTyping(data));\r\n\r\n  useEffect(() => {\r\n    if (localStorage.username) {\r\n      setDest(chat.users.find(user => user.username !== localStorage.username));\r\n    }\r\n  }, [localStorage.username, dest, chat.users]);\r\n\r\n  useEffect(() => {\r\n    setSelected(!isSelected);\r\n  }, []);\r\n\r\n  return (\r\n    <ChatHeaderStyle ref={headerRef}>\r\n      <span className=\"btn-option\" onClick={handleClick}>\r\n        +\r\n      </span>\r\n      <span className=\"go-back\" onClick={handleTransition}>\r\n        <i className=\"fas fa-chevron-left\" />\r\n      </span>\r\n      <span className=\"img-contact\">\r\n        {dest ? dest.username[0].toUpperCase() : null}\r\n      </span>\r\n      <h4>{dest ? dest.username : null}</h4>\r\n      {isTyping && <span className=\"header-typing\">is typing...</span>}\r\n    </ChatHeaderStyle>\r\n  );\r\n};\r\n\r\nexport default ChatHeader;\r\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import _regeneratorRuntime from \"/home/yamakasi/React/react_chat_socketio/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/yamakasi/React/react_chat_socketio/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"/home/yamakasi/React/react_chat_socketio/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _taggedTemplateLiteral from \"/home/yamakasi/React/react_chat_socketio/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/home/yamakasi/React/react_chat_socketio/src/components/friends/Friend.jsx\";\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  margin: 0;\\n  padding-left: 8px;\\n  transition: all 300ms ease-in;\\n  cursor: pointer;\\n\\n  &:hover,\\n  &:active {\\n    background-color: #32465a;\\n    padding-left: 24px;\\n    border-right: 2px solid #2c3e50;\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport { useAppHooks } from \"../../contexts\";\nimport { CHAT_SELECTED } from \"../../reducers/transitionReducer\";\nimport isMobile from \"../../utils/isMobile\";\nimport api from \"../../api\";\nvar FriendStyle = styled.li(_templateObject());\n\nvar Friend = function Friend(_ref) {\n  var contact = _ref.contact;\n\n  var _useAppHooks = useAppHooks(),\n      useAuth = _useAppHooks.useAuth,\n      useTransition = _useAppHooks.useTransition,\n      history = _useAppHooks.history,\n      socket = _useAppHooks.socket;\n\n  var _useAuth = _slicedToArray(useAuth, 2),\n      user = _useAuth[0].user,\n      dispatchAuth = _useAuth[1];\n\n  var _useTransition = _slicedToArray(useTransition, 2),\n      transition = _useTransition[0],\n      dispatchTransition = _useTransition[1];\n\n  var handleClick =\n  /*#__PURE__*/\n  function () {\n    var _ref2 = _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee() {\n      var users;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              users = [contact.id, user.id];\n              socket.emit(\"new-chat\", users);\n              if (isMobile) dispatchTransition({\n                type: CHAT_SELECTED,\n                payload: true\n              }); // try {\n              //   let chatRequest = await api.chat.searchChatByFriends(users);\n              //   if (chatRequest) {\n              //     history.push(`/chats/${chatRequest.id}`);\n              //   } else {\n              //     let chat = await api.chat.createChat(users);\n              //     if (chat) {\n              //       history.push(`/chats/${chat.id}`);\n              //     }\n              //   }\n              // } catch (error) {\n              //   throw error;\n              // }\n\n            case 3:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function handleClick() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  return React.createElement(FriendStyle, {\n    onClick: handleClick,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, contact.username);\n};\n\nexport default Friend;","map":{"version":3,"sources":["/home/yamakasi/React/react_chat_socketio/src/components/friends/Friend.jsx"],"names":["React","useEffect","styled","useAppHooks","CHAT_SELECTED","isMobile","api","FriendStyle","li","Friend","contact","useAuth","useTransition","history","socket","user","dispatchAuth","transition","dispatchTransition","handleClick","users","id","emit","type","payload","username"],"mappings":";;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAASC,WAAT,QAA4B,gBAA5B;AACA,SAASC,aAAT,QAA8B,kCAA9B;AACA,OAAOC,QAAP,MAAqB,sBAArB;AACA,OAAOC,GAAP,MAAgB,WAAhB;AAEA,IAAMC,WAAW,GAAGL,MAAM,CAACM,EAAV,mBAAjB;;AAcA,IAAMC,MAAM,GAAG,SAATA,MAAS,OAAiB;AAAA,MAAdC,OAAc,QAAdA,OAAc;;AAAA,qBACsBP,WAAW,EADjC;AAAA,MACtBQ,OADsB,gBACtBA,OADsB;AAAA,MACbC,aADa,gBACbA,aADa;AAAA,MACEC,OADF,gBACEA,OADF;AAAA,MACWC,MADX,gBACWA,MADX;;AAAA,gCAEGH,OAFH;AAAA,MAErBI,IAFqB,eAErBA,IAFqB;AAAA,MAEbC,YAFa;;AAAA,sCAGWJ,aAHX;AAAA,MAGvBK,UAHuB;AAAA,MAGXC,kBAHW;;AAK9B,MAAMC,WAAW;AAAA;AAAA;AAAA;AAAA;AAAA,6BAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AACdC,cAAAA,KADc,GACN,CAACV,OAAO,CAACW,EAAT,EAAaN,IAAI,CAACM,EAAlB,CADM;AAElBP,cAAAA,MAAM,CAACQ,IAAP,CAAY,UAAZ,EAAwBF,KAAxB;AACA,kBAAIf,QAAJ,EAAca,kBAAkB,CAAC;AAAEK,gBAAAA,IAAI,EAAEnB,aAAR;AAAuBoB,gBAAAA,OAAO,EAAE;AAAhC,eAAD,CAAlB,CAHI,CAIlB;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAjBkB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAH;;AAAA,oBAAXL,WAAW;AAAA;AAAA;AAAA,KAAjB;;AAoBA,SAAO,oBAAC,WAAD;AAAa,IAAA,OAAO,EAAEA,WAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAoCT,OAAO,CAACe,QAA5C,CAAP;AACD,CA1BD;;AA4BA,eAAehB,MAAf","sourcesContent":["import React, { useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport { useAppHooks } from \"../../contexts\";\nimport { CHAT_SELECTED } from \"../../reducers/transitionReducer\";\nimport isMobile from \"../../utils/isMobile\";\nimport api from \"../../api\";\n\nconst FriendStyle = styled.li`\n  margin: 0;\n  padding-left: 8px;\n  transition: all 300ms ease-in;\n  cursor: pointer;\n\n  &:hover,\n  &:active {\n    background-color: #32465a;\n    padding-left: 24px;\n    border-right: 2px solid #2c3e50;\n  }\n`;\n\nconst Friend = ({ contact }) => {\n  const { useAuth, useTransition, history, socket } = useAppHooks();\n  const [{ user }, dispatchAuth] = useAuth;\n  const [transition, dispatchTransition] = useTransition;\n\n  const handleClick = async () => {\n    let users = [contact.id, user.id];\n    socket.emit(\"new-chat\", users);\n    if (isMobile) dispatchTransition({ type: CHAT_SELECTED, payload: true });\n    // try {\n    //   let chatRequest = await api.chat.searchChatByFriends(users);\n\n    //   if (chatRequest) {\n    //     history.push(`/chats/${chatRequest.id}`);\n    //   } else {\n    //     let chat = await api.chat.createChat(users);\n    //     if (chat) {\n    //       history.push(`/chats/${chat.id}`);\n    //     }\n    //   }\n    // } catch (error) {\n    //   throw error;\n    // }\n  };\n\n  return <FriendStyle onClick={handleClick}>{contact.username}</FriendStyle>;\n};\n\nexport default Friend;\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import _regeneratorRuntime from \"/home/yamakasi/React/react_chat_socketio/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/yamakasi/React/react_chat_socketio/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"/home/yamakasi/React/react_chat_socketio/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _taggedTemplateLiteral from \"/home/yamakasi/React/react_chat_socketio/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/home/yamakasi/React/react_chat_socketio/src/components/forms/RegisterForm.jsx\";\n\nfunction _templateObject3() {\n  var data = _taggedTemplateLiteral([\"\\n  background-color: forestgreen;\\n  color: white;\\n  margin-top: 15px;\\n  border-radius: 5px;\\n  padding: 3px;\\n  border: none;\\n  box-shadow: 2px 2px 5px rgba(0, 0, 0, 0.4);\\n\"]);\n\n  _templateObject3 = function _templateObject3() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteral([\"\\n  margin-right: 10px;\\n\"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  padding: 0 10px 20px;\\n  display: flex;\\n  flex-direction: column;\\n\\n  & span {\\n    margin: 10px 0;\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport { useAppHooks } from \"../../contexts\";\nimport { AUTH_FAILED, CONNECTED, RESET_ERROR } from \"../../reducers/authReducer\";\nimport TextInput from \"../inputs/TextInput\";\nimport EmailInput from \"../inputs/EmailInput\";\nimport PwdInput from \"../inputs/PwdInput\";\nimport api from \"../../api\";\nimport storeToken from \"../../utils/storeToken\";\nvar FormStyle = styled.form(_templateObject());\nvar LabelStyle = styled.label(_templateObject2());\nvar ButtonStyle = styled.button(_templateObject3());\n\nvar RegisterForm = function RegisterForm() {\n  var _useAppHooks = useAppHooks(),\n      useAuth = _useAppHooks.useAuth,\n      history = _useAppHooks.history;\n\n  var _useAuth = _slicedToArray(useAuth, 2),\n      _useAuth$ = _useAuth[0],\n      error = _useAuth$.error,\n      isConnected = _useAuth$.isConnected,\n      dispatch = _useAuth[1];\n\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      username = _useState2[0],\n      setUsername = _useState2[1];\n\n  var _useState3 = useState(null),\n      _useState4 = _slicedToArray(_useState3, 2),\n      email = _useState4[0],\n      setEmail = _useState4[1];\n\n  var _useState5 = useState(null),\n      _useState6 = _slicedToArray(_useState5, 2),\n      password = _useState6[0],\n      setPassword = _useState6[1];\n\n  var _useState7 = useState(null),\n      _useState8 = _slicedToArray(_useState7, 2),\n      errorRegister = _useState8[0],\n      setError = _useState8[1];\n\n  var handleSubmit =\n  /*#__PURE__*/\n  function () {\n    var _ref = _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee(e) {\n      var res;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              e.preventDefault();\n              _context.prev = 1;\n\n              if (!(email && password)) {\n                _context.next = 13;\n                break;\n              }\n\n              _context.next = 5;\n              return api.user.register(username, email, password);\n\n            case 5:\n              res = _context.sent;\n              storeToken(res);\n              dispatch({\n                type: CONNECTED\n              });\n              setUsername(null);\n              setEmail(null);\n              setPassword(null);\n              _context.next = 14;\n              break;\n\n            case 13:\n              if (!email) {\n                setError({\n                  code: \"email\",\n                  message: \"Username is required\"\n                });\n              } else if (!password) {\n                setError({\n                  code: \"password\",\n                  message: \"Password is required\"\n                });\n              } else if (!username) {\n                setError({\n                  code: \"username\",\n                  message: \"Username is required\"\n                });\n              }\n\n            case 14:\n              _context.next = 19;\n              break;\n\n            case 16:\n              _context.prev = 16;\n              _context.t0 = _context[\"catch\"](1);\n              dispatch({\n                type: AUTH_FAILED,\n                payload: _context.t0.response.data\n              });\n\n            case 19:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[1, 16]]);\n    }));\n\n    return function handleSubmit(_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  useEffect(function () {\n    if (error) setError(error);\n    return function () {\n      return dispatch({\n        type: RESET_ERROR\n      });\n    };\n  }, [error, dispatch]);\n  useEffect(function () {\n    if (errorRegister) {\n      if (errorRegister.email) {\n        alert(errorRegister.email);\n      } else if (errorRegister.password) {\n        alert(errorRegister.password);\n      } else if (errorRegister.msg) {\n        alert(errorRegister.msg);\n      }\n    }\n\n    return function () {\n      return setError(null);\n    };\n  }, [errorRegister, dispatch]);\n  useEffect(function () {\n    if (isConnected) {\n      history.replace(\"/\");\n    }\n  }, [isConnected, history]);\n  return React.createElement(FormStyle, {\n    onSubmit: handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98\n    },\n    __self: this\n  }, React.createElement(LabelStyle, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99\n    },\n    __self: this\n  }, \"Username\"), React.createElement(TextInput, {\n    value: username,\n    name: \"username\",\n    placeholder: \"Type your username\",\n    handleChange: setUsername,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100\n    },\n    __self: this\n  })), React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107\n    },\n    __self: this\n  }, React.createElement(LabelStyle, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108\n    },\n    __self: this\n  }, \"Email\"), React.createElement(EmailInput, {\n    value: email,\n    name: \"email\",\n    placeholder: \"Type your email\",\n    handleChange: setEmail,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109\n    },\n    __self: this\n  })), React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116\n    },\n    __self: this\n  }, React.createElement(LabelStyle, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117\n    },\n    __self: this\n  }, \"Password\"), React.createElement(PwdInput, {\n    value: password,\n    name: \"password\",\n    placeholder: \"Type your password\",\n    handleChange: setPassword,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118\n    },\n    __self: this\n  })), React.createElement(ButtonStyle, {\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125\n    },\n    __self: this\n  }, \"Create user\"));\n};\n\nexport default RegisterForm;","map":{"version":3,"sources":["/home/yamakasi/React/react_chat_socketio/src/components/forms/RegisterForm.jsx"],"names":["React","useState","useEffect","styled","useAppHooks","AUTH_FAILED","CONNECTED","RESET_ERROR","TextInput","EmailInput","PwdInput","api","storeToken","FormStyle","form","LabelStyle","label","ButtonStyle","button","RegisterForm","useAuth","history","error","isConnected","dispatch","username","setUsername","email","setEmail","password","setPassword","errorRegister","setError","handleSubmit","e","preventDefault","user","register","res","type","code","message","payload","response","data","alert","msg","replace"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { useAppHooks } from \"../../contexts\";\r\nimport { AUTH_FAILED, CONNECTED, RESET_ERROR } from \"../../reducers/authReducer\";\r\nimport TextInput from \"../inputs/TextInput\";\r\nimport EmailInput from \"../inputs/EmailInput\";\r\nimport PwdInput from \"../inputs/PwdInput\";\r\nimport api from \"../../api\";\r\nimport storeToken from \"../../utils/storeToken\";\r\n\r\nconst FormStyle = styled.form`\r\n  padding: 0 10px 20px;\r\n  display: flex;\r\n  flex-direction: column;\r\n\r\n  & span {\r\n    margin: 10px 0;\r\n  }\r\n`;\r\n\r\nconst LabelStyle = styled.label`\r\n  margin-right: 10px;\r\n`;\r\n\r\nconst ButtonStyle = styled.button`\r\n  background-color: forestgreen;\r\n  color: white;\r\n  margin-top: 15px;\r\n  border-radius: 5px;\r\n  padding: 3px;\r\n  border: none;\r\n  box-shadow: 2px 2px 5px rgba(0, 0, 0, 0.4);\r\n`;\r\n\r\nconst RegisterForm = () => {\r\n  const { useAuth, history } = useAppHooks();\r\n  const [{ error, isConnected }, dispatch] = useAuth;\r\n\r\n  const [username, setUsername] = useState(null);\r\n  const [email, setEmail] = useState(null);\r\n  const [password, setPassword] = useState(null);\r\n  const [errorRegister, setError] = useState(null);\r\n\r\n  const handleSubmit = async e => {\r\n    e.preventDefault();\r\n    try {\r\n      if (email && password) {\r\n        const res = await api.user.register(username, email, password);\r\n        storeToken(res)\r\n        dispatch({ type: CONNECTED });\r\n\r\n        setUsername(null)\r\n        setEmail(null);\r\n        setPassword(null);\r\n      } else if (!email) {\r\n        setError({ code: \"email\", message: \"Username is required\" });\r\n      } else if (!password) {\r\n        setError({ code: \"password\", message: \"Password is required\" });\r\n      } else if (!username) {\r\n        setError({ code: \"username\", message: \"Username is required\" });\r\n      }\r\n    } catch (error) {\r\n      dispatch({\r\n        type: AUTH_FAILED,\r\n        payload: error.response.data\r\n      });\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (error) setError(error);\r\n    return () => dispatch({ type: RESET_ERROR })\r\n  }, [error, dispatch]);\r\n\r\n  useEffect(() => {\r\n    if (errorRegister) {\r\n      if (errorRegister.email) {\r\n        alert(errorRegister.email);\r\n      }\r\n      else if (errorRegister.password) {\r\n        alert(errorRegister.password);\r\n      }\r\n      else if (errorRegister.msg) {\r\n        alert(errorRegister.msg);\r\n      }\r\n    }\r\n    return () => setError(null)\r\n  }, [errorRegister, dispatch]);\r\n\r\n  useEffect(() => {\r\n    if (isConnected) {\r\n      history.replace(\"/\");\r\n    }\r\n  }, [isConnected, history]);\r\n\r\n  return (\r\n    <FormStyle onSubmit={handleSubmit}>\r\n      <span>\r\n        <LabelStyle>Username</LabelStyle>\r\n        <TextInput\r\n          value={username}\r\n          name=\"username\"\r\n          placeholder=\"Type your username\"\r\n          handleChange={setUsername}\r\n        />\r\n      </span>\r\n      <span>\r\n        <LabelStyle>Email</LabelStyle>\r\n        <EmailInput\r\n          value={email}\r\n          name=\"email\"\r\n          placeholder=\"Type your email\"\r\n          handleChange={setEmail}\r\n        />\r\n      </span>\r\n      <span>\r\n        <LabelStyle>Password</LabelStyle>\r\n        <PwdInput\r\n          value={password}\r\n          name=\"password\"\r\n          placeholder=\"Type your password\"\r\n          handleChange={setPassword}\r\n        />\r\n      </span>\r\n      <ButtonStyle type=\"submit\">Create user</ButtonStyle>\r\n    </FormStyle>\r\n  );\r\n};\r\n\r\nexport default RegisterForm;\r\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import _slicedToArray from \"/home/yamakasi/React/react_chat_socketio/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _taggedTemplateLiteral from \"/home/yamakasi/React/react_chat_socketio/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/home/yamakasi/React/react_chat_socketio/src/components/messages/MessageList.jsx\";\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteral([\"\\n  width: 100%;\\n  height: 50px;\\n  color: black;\\n  // background-color: rgba(255, 255, 255, .4);\\n  text-align: center;\\n  line-height: 50px;\\n  font-size: 1.7em;\\n\"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  margin: 50px 0px 140px;\\n  padding: 10px 10px 50px;\\n  display: block;\\n  list-style: none;\\n  height: calc(100vh - 130px);\\n  width: 100%;\\n  position: relative;\\n  bottom: 0;\\n  overflow-y: scroll;\\n  // scroll-behavior: smooth;\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport MessageItem from \"./MessageItem\";\nimport { useAppHooks } from \"../../contexts\";\nimport { socketOn } from \"../../socket\";\nimport Moment from \"react-moment\";\nvar MessageListStyle = styled.ul(_templateObject());\nvar MessageDate = styled.div(_templateObject2());\n\nvar MessageSortedByDate = function MessageSortedByDate(_ref) {\n  var messages = _ref.messages,\n      contact = _ref.contact;\n  var dates = [];\n\n  var day = function day(date) {\n    return new Date(date).getDate();\n  };\n\n  var month = function month(date) {\n    return new Date(date).getMonth();\n  };\n\n  var year = function year(date) {\n    return new Date(date).getFullYear();\n  };\n\n  dates = messages.reduce(function (m, d, i) {\n    m.push(d.createdAt);\n    console.log(i);\n\n    if (i > 0) {\n      console.log(day(d.createdAt));\n      console.log(day(m[i - 1]));\n      console.log(day(d.createdAt) !== day(m[i - 1]));\n\n      if (d && day(d.createdAt) !== day(m[i - 1]) || month(d.createdAt) !== month(m[i - 1]) || year(d.createdAt) !== year(m[i - 1])) {\n        m.push(d.createdAt);\n      }\n    }\n\n    return m;\n  }, []);\n  console.log(dates.length);\n  return dates.map(function (date) {\n    return React.createElement(React.Fragment, {\n      key: date,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, React.createElement(MessageDate, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, React.createElement(Moment, {\n      format: \"D MMM YYYY\",\n      date: date,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    })), messages.filter(function (message) {\n      return day(date) === day(message.createdAt) || month(date) === month(message.createdAt) || year(date) === year(message.createdAt);\n    }).map(function (message) {\n      return React.createElement(MessageItem, {\n        key: message.id,\n        contact: contact,\n        message: message,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      });\n    }));\n  });\n};\n\nvar MessageList = function MessageList(_ref2) {\n  var chat = _ref2.chat;\n\n  var _useAppHooks = useAppHooks(),\n      useAuth = _useAppHooks.useAuth,\n      socket = _useAppHooks.socket;\n\n  var _useAuth = _slicedToArray(useAuth, 2),\n      user = _useAuth[0].user,\n      _ = _useAuth[1];\n\n  var messagesRef = React.useRef();\n\n  var _useState = useState(chat.messages),\n      _useState2 = _slicedToArray(_useState, 2),\n      messages = _useState2[0],\n      setMessages = _useState2[1];\n\n  var _useState3 = useState(chat.users),\n      _useState4 = _slicedToArray(_useState3, 2),\n      users = _useState4[0],\n      setUsers = _useState4[1];\n\n  var contact = users.find(function (u) {\n    return u.name !== user.name;\n  });\n  socketOn('fetch-messages', socket, messages, function (data, messages) {\n    if (data.chatId === chat.id && messages.length !== data.messages.length) {\n      setMessages(data.messages);\n    }\n  });\n  useEffect(function () {\n    if (messagesRef) {\n      messagesRef.current.scrollTo(0, messagesRef.current.scrollHeight);\n    }\n  }, [messages]);\n  return React.createElement(MessageListStyle, {\n    ref: messagesRef,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92\n    },\n    __self: this\n  }, messages.length > 0 && React.createElement(MessageSortedByDate, {\n    contact: contact,\n    messages: messages,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95\n    },\n    __self: this\n  }));\n};\n\nexport default MessageList;","map":{"version":3,"sources":["/home/yamakasi/React/react_chat_socketio/src/components/messages/MessageList.jsx"],"names":["React","useState","useEffect","styled","MessageItem","useAppHooks","socketOn","Moment","MessageListStyle","ul","MessageDate","div","MessageSortedByDate","messages","contact","dates","day","date","Date","getDate","month","getMonth","year","getFullYear","reduce","m","d","i","push","createdAt","console","log","length","map","filter","message","id","MessageList","chat","useAuth","socket","user","_","messagesRef","useRef","setMessages","users","setUsers","find","u","name","data","chatId","current","scrollTo","scrollHeight"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport MessageItem from \"./MessageItem\";\r\nimport { useAppHooks } from \"../../contexts\";\r\nimport { socketOn } from \"../../socket\";\r\nimport Moment from \"react-moment\";\r\n\r\nconst MessageListStyle = styled.ul`\r\n  margin: 50px 0px 140px;\r\n  padding: 10px 10px 50px;\r\n  display: block;\r\n  list-style: none;\r\n  height: calc(100vh - 130px);\r\n  width: 100%;\r\n  position: relative;\r\n  bottom: 0;\r\n  overflow-y: scroll;\r\n  // scroll-behavior: smooth;\r\n`;\r\n\r\nconst MessageDate = styled.div`\r\n  width: 100%;\r\n  height: 50px;\r\n  color: black;\r\n  // background-color: rgba(255, 255, 255, .4);\r\n  text-align: center;\r\n  line-height: 50px;\r\n  font-size: 1.7em;\r\n`\r\n\r\nconst MessageSortedByDate = ({ messages, contact }) => {\r\n  let dates = []\r\n  const day = date => new Date(date).getDate()\r\n  const month = date => new Date(date).getMonth()\r\n  const year = date => new Date(date).getFullYear()\r\n  \r\n  dates = messages.reduce(function(m, d, i) {\r\n    m.push(d.createdAt)\r\n    console.log(i)\r\n    if (i > 0 ) {\r\n      console.log(day(d.createdAt))\r\n      console.log(day(m[i - 1]))\r\n      console.log(day(d.createdAt) !== day(m[i - 1]))\r\n      if (d && day(d.createdAt) !== day(m[i - 1]) || month(d.createdAt) !== month(m[i - 1]) || year(d.createdAt) !== year(m[i - 1])) {\r\n        m.push(d.createdAt)\r\n      }\r\n    }\r\n    return m\r\n  }, [])\r\n\r\n  console.log(dates.length)\r\n  \r\n  return dates.map(date =>\r\n    <React.Fragment key={date}>\r\n      <MessageDate>\r\n        <Moment format=\"D MMM YYYY\" date={date} />\r\n      </MessageDate>\r\n      {\r\n        messages\r\n          .filter(message => day(date) === day(message.createdAt) || month(date) === month(message.createdAt) || year(date) === year(message.createdAt))\r\n          .map(message => (\r\n            <MessageItem key={message.id} contact={contact} message={message} />\r\n          )\r\n        )\r\n      }\r\n    </React.Fragment>\r\n  )\r\n}\r\n\r\nconst MessageList = ({ chat }) => {\r\n  const { useAuth, socket } = useAppHooks()\r\n  const [{user},_] = useAuth\r\n  const messagesRef = React.useRef();\r\n  \r\n  const [messages, setMessages] = useState(chat.messages)\r\n  const [users, setUsers] = useState(chat.users)\r\n  const contact = users.find(u => u.name !== user.name);\r\n\r\n  socketOn('fetch-messages', socket, messages, (data, messages) => {\r\n    if (data.chatId === chat.id && messages.length !== data.messages.length) {\r\n      setMessages(data.messages)\r\n    }\r\n  })\r\n\r\n  useEffect(() => {\r\n    if (messagesRef) {\r\n      messagesRef.current.scrollTo(0, messagesRef.current.scrollHeight)\r\n    }\r\n  }, [messages])\r\n\r\n  return (\r\n    <MessageListStyle ref={messagesRef}>\r\n      {\r\n        messages.length > 0 && \r\n        <MessageSortedByDate contact={contact} messages={messages} />\r\n      }\r\n    </MessageListStyle>\r\n  );\r\n};\r\n\r\nexport default MessageList;\r\n"]},"metadata":{},"sourceType":"module"}